// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Structure to represent a new ExportResultArchive request.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportResultArchiveInput {
    #[allow(missing_docs)] // documentation missing in model
    pub export_id: ::std::option::Option<::std::string::String>,
    /// Export Intent
    pub export_intent: ::std::option::Option<crate::types::ExportIntent>,
}
impl ExportResultArchiveInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn export_id(&self) -> ::std::option::Option<&str> {
        self.export_id.as_deref()
    }
    /// Export Intent
    pub fn export_intent(&self) -> ::std::option::Option<&crate::types::ExportIntent> {
        self.export_intent.as_ref()
    }
}
impl ExportResultArchiveInput {
    /// Creates a new builder-style object to manufacture [`ExportResultArchiveInput`](crate::operation::export_result_archive::ExportResultArchiveInput).
    pub fn builder() -> crate::operation::export_result_archive::builders::ExportResultArchiveInputBuilder {
        crate::operation::export_result_archive::builders::ExportResultArchiveInputBuilder::default()
    }
}

/// A builder for [`ExportResultArchiveInput`](crate::operation::export_result_archive::ExportResultArchiveInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportResultArchiveInputBuilder {
    pub(crate) export_id: ::std::option::Option<::std::string::String>,
    pub(crate) export_intent: ::std::option::Option<crate::types::ExportIntent>,
}
impl ExportResultArchiveInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn export_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.export_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_export_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.export_id = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_export_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.export_id
    }
    /// Export Intent
    /// This field is required.
    pub fn export_intent(mut self, input: crate::types::ExportIntent) -> Self {
        self.export_intent = ::std::option::Option::Some(input);
        self
    }
    /// Export Intent
    pub fn set_export_intent(mut self, input: ::std::option::Option<crate::types::ExportIntent>) -> Self {
        self.export_intent = input;
        self
    }
    /// Export Intent
    pub fn get_export_intent(&self) -> &::std::option::Option<crate::types::ExportIntent> {
        &self.export_intent
    }
    /// Consumes the builder and constructs a [`ExportResultArchiveInput`](crate::operation::export_result_archive::ExportResultArchiveInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::export_result_archive::ExportResultArchiveInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::export_result_archive::ExportResultArchiveInput {
            export_id: self.export_id,
            export_intent: self.export_intent,
        })
    }
}
