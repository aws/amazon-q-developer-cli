# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface IScriptGenerator {
  type: String!
}

interface IScriptParameter {
  description: String
  displayName: String
  name: String!
  type: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Namespace {
  createdAt: DateTime!
  scripts(where: ScriptWhereInput): [Script!]!
  team: Team
  updatedAt: DateTime!
  user: User
  username: String!
}

type OtherUser {
  username: String
}

type Plugin {
  authorNames: [String!]!
  authors: [JSON!]!
  categories: [String!]!
  createdAt: DateTime!
  description: String
  displayName: String
  downloads: Int!
  forks: String
  githubOwner: String
  githubReadme: String
  githubRef: String
  githubRepo: String
  icon: String
  keywords: [String!]!
  license: [String!]!
  name: String!
  noteworthy: Boolean!
  pushedAt: DateTime
  raw: JSON!
  readme: String
  shells: [String!]!
  stargazers: Int
  updatedAt: DateTime!
  verified: Boolean!
}

input PluginWhereInput {
  name: String
}

input PluginWhereUniqueInput {
  name: String!
}

type Query {
  """Current user"""
  currentNamespace: Namespace!

  """Current user"""
  currentUser: User

  """Find a namespace"""
  namespace(username: String): Namespace
  plugin(where: PluginWhereUniqueInput!): Plugin
  plugins(where: PluginWhereInput): [Plugin!]!
}

type Script {
  createdAt: DateTime!
  createdBy: OtherUser
  description: String
  displayName: String
  icon: String
  invocations: [ScriptInvocation!]!
  lastInvokedAt: DateTime
  name: String!
  namespace: Namespace
  parameters: [ScriptParameter!]!
  rules: [[ScriptRule!]!]
  tags: [String!]!
  templateRaw: String!
  templateVersion: Int!
  updatedAt: DateTime!
}

type ScriptCheckboxParameter implements IScriptParameter {
  description: String
  displayName: String
  name: String!
  type: String!
  typeData: ScriptCheckboxTypeData!
}

type ScriptCheckboxTypeData {
  falseValueSubstitution: String!
  trueValueSubstitution: String!
}

enum ScriptFileType {
  Any
  FileOnly
  FolderOnly
}

union ScriptGenerator = ScriptNamedGenerator | ScriptScriptGenerator

type ScriptInvocation {
  executionDuration: BigInt!
  executionStartTime: DateTime!
  exitCode: Float
  script: Script!
  standardError: String
  updatedAt: DateTime!
  user: OtherUser
}

type ScriptNamedGenerator implements IScriptGenerator {
  name: String!
  type: String!
}

union ScriptParameter = ScriptCheckboxParameter | ScriptPathParameter | ScriptSelectorParameter | ScriptTextParameter

type ScriptPathParameter implements IScriptParameter {
  description: String
  displayName: String
  name: String!
  type: String!
  typeData: ScriptPathTypeData!
}

type ScriptPathTypeData {
  extensions: [String!]!
  fileType: ScriptFileType!
}

type ScriptRule {
  inverted: Boolean!
  key: ScriptRuleKey!
  predicate: ScriptRulePredicate!
  specifier: String
  value: String
}

enum ScriptRuleKey {
  ContentsOfDirectory
  CurrentBranch
  EnvironmentVariable
  GitRemote
  GitRootDirectory
  WorkingDirectory
}

enum ScriptRulePredicate {
  Contains
  EndsWith
  Equals
  Exists
  Matches
  StartsWith
}

type ScriptScriptGenerator implements IScriptGenerator {
  script: String!
  type: String!
}

type ScriptSelectorParameter implements IScriptParameter {
  description: String
  displayName: String
  name: String!
  type: String!
  typeData: ScriptSelectorTypeData!
}

type ScriptSelectorTypeData {
  generators: [ScriptGenerator!]
  placeholder: String
  suggestions: [String!]
}

type ScriptTextParameter implements IScriptParameter {
  description: String
  displayName: String
  name: String!
  type: String!
  typeData: ScriptTextTypeData!
}

type ScriptTextTypeData {
  placeholder: String
}

input ScriptWhereInput {
  name: StringFilter
  tag: StringNullableListFilter
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

type Team {
  createdAt: DateTime!
  namespace: Namespace
  teamMemberships: [TeamMembership!]!
  updatedAt: DateTime!
}

type TeamMembership {
  createdAt: DateTime!
  role: String!
  team: Team!
  updatedAt: DateTime!
  user: OtherUser!
}

type User {
  createdAt: DateTime!
  dotfilesEarlyAccess: Boolean!
  firstName: String
  fullName: String
  hasSeenOnboarding: Boolean!
  lastName: String
  namespace: Namespace
  primaryEmail: String!
  settings: JSONObject!
  teamMemberships: [TeamMembership!]!
  updatedAt: DateTime!
}
