// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_metric_datum(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::MetricDatum,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.metric_name {
        object.key("MetricName").string(var_1.as_str());
    }
    {
        object.key("EpochTimestamp").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.epoch_timestamp).into()),
        );
    }
    if let Some(var_2) = &input.unit {
        object.key("Unit").string(var_2.as_str());
    }
    {
        object.key("Value").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((input.value).into()),
        );
    }
    if let Some(var_3) = &input.metadata {
        let mut array_4 = object.key("Metadata").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_metadata_entry::ser_metadata_entry(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if input.passive {
        object.key("Passive").boolean(input.passive);
    }
    Ok(())
}
