// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_telemetry_event(
    object_3: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::TelemetryEvent,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    match input {
        crate::types::TelemetryEvent::UserTriggerDecisionEvent(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_3.key("userTriggerDecisionEvent").start_object();
            crate::protocol_serde::shape_user_trigger_decision_event::ser_user_trigger_decision_event(
                &mut object_1,
                inner,
            )?;
            object_1.finish();
        },
        crate::types::TelemetryEvent::CodeCoverageEvent(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_3.key("codeCoverageEvent").start_object();
            crate::protocol_serde::shape_code_coverage_event::ser_code_coverage_event(&mut object_2, inner)?;
            object_2.finish();
        },
        crate::types::TelemetryEvent::UserModificationEvent(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_3.key("userModificationEvent").start_object();
            crate::protocol_serde::shape_user_modification_event::ser_user_modification_event(&mut object_3, inner)?;
            object_3.finish();
        },
        crate::types::TelemetryEvent::CodeScanEvent(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_3.key("codeScanEvent").start_object();
            crate::protocol_serde::shape_code_scan_event::ser_code_scan_event(&mut object_4, inner)?;
            object_4.finish();
        },
        crate::types::TelemetryEvent::Unknown => {
            return Err(::aws_smithy_http::operation::error::SerializationError::unknown_variant("TelemetryEvent"));
        },
    }
    Ok(())
}
