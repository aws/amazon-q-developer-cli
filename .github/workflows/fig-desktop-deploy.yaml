name: Fig Desktop S3 Deploy

on:
  workflow_dispatch:
    inputs:
      deployToS3:
        type: boolean
        description: 'Deploy the Build to S3'     
        default: true
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              build-essential \
              pkg-config \
              jq \
              dpkg \
              curl \
              wget \
              cmake \
              clang \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev \
              libdbus-1-dev \
              libwebkit2gtk-4.0-dev \
              valac \
              libibus-1.0-dev \
              libglib2.0-dev
    
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set VERSION
        run: |
          VERSION="$(jq -r .FIG_VERSION bundle/bundle_info.json)"
          echo VERSION=$VERSION >> $GITHUB_ENV
          echo "Version: $VERSION"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@6720f05bc48b77f96918929a9019fb2203ff71f8

      - name: Make
        run: make

      - name: Upload to S3 Bucket
        if: github.event.inputs.deployToS3
        run: |
          aws s3 cp ./build/fig-x86_64-linux.tar.gz s3://get-fig-io/desktop/linux-x86_64/fig-$VERSION.tar.gz
          aws s3 cp ./build/fig-x86_64-linux.tar.gz s3://get-fig-io/desktop/linux-x86_64/fig-latest.tar.gz
          aws s3 cp ./build/fig-x86_64-linux.deb    s3://get-fig-io/desktop/linux-x86_64/fig-$VERSION.deb
          aws s3 cp ./build/fig-x86_64-linux.deb    s3://get-fig-io/desktop/linux-x86_64/fig-latest.deb
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DOTFILESD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DOTFILESD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-1

