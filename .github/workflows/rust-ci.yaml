name: Rust CI

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "rust-lib/**"
      - "figterm/**"
      - "fig_cli/**"
      - "fig_tauri/**"
      - "proto/**"
      - ".github/workflows/rust-ci.yaml"
  push:
    paths:
      - "rust-lib/**"
      - "figterm/**"
      - "fig_cli/**"
      - "fig_tauri/**"
      - "proto/**"
      - ".github/workflows/rust-ci.yaml"
    branches:
      - master
      - staging
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    name: Setup Workflow
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Nightly Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt

      - name: Install Stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72

  rust-build-and-test:
    name: Rust Build and Test
    runs-on: [self-hosted, linux, x64]
    needs: setup
    steps:
      - name: Compile
        shell: bash
        run: cargo test --no-run --locked

      - name: Test
        shell: bash
        run: cargo test --no-default-features -- --nocapture --quiet

  rust-clippy-lint:
    name: Rust Clippy Lint
    runs-on: [self-hosted, linux, x64]
    needs: setup
    steps:
      - name: Clippy Lint
        shell: bash
        run: cargo clippy --workspace -- -D warnings

  rust-fmt-lint:
    name: Rust Fmt Lint
    runs-on: [self-hosted, linux, x64]
    needs: setup
    steps:
      - name: Fmt Lint
        run: cargo +nightly fmt -- --color always --check
