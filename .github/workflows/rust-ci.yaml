name: Rust CI

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "rust-lib/**"
      - "figterm/**"
      - "fig_cli/**"
      - "fig_desktop/**"
      - "proto/**"
      - ".github/workflows/rust-ci.yaml"
  push:
    paths:
      - "rust-lib/**"
      - "figterm/**"
      - "fig_cli/**"
      - "fig_desktop/**"
      - "proto/**"
      - ".github/workflows/rust-ci.yaml"
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  lint:
    name: Lint
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Nightly Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt

      - name: Install Stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v1
        
      - name: Fmt Lint
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          toolchain: nightly
          args: --check

      - name: Clippy Lint
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace

  build:
    name: Build and test
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v1
        
      - name: Install nextest 
        uses: taiki-e/install-action@nextest
        
      - name: Test nextest
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --no-default-features

