#! /bin/bash

# return settings
EXIT_CODE=0
if [[ "$1" == "settings" ]]; then
    cat ~/.fig/settings.json | jq '.["'"$2"'"]';
else
    # check if subcommand exists as env variable
    # eg. if `fig app:running` is called, check from an env var with the same name
    # replacing colons with underscores
    MOCKED_COMMAND=$(echo MOCK_"$1" | tr ':' '_')
    MOCKED_OUTPUT=$(eval "echo \$$(eval 'echo $MOCKED_COMMAND')")

    if [[ -n "${MOCKED_OUTPUT}" ]]; then
        echo $MOCKED_OUTPUT
    else
        "$HOME/q_cli/q_cli" "$@"
        EXIT_CODE=$?
    fi
fi

(echo mock "$EXIT_CODE" "$TERM_SESSION_ID" "$@" | base64 | /bin/nc -U /tmp/mock_q_cli.socket &)
