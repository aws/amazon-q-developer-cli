syntax = "proto3";
option objc_class_prefix = "FIG";
package local;

message LocalMessage {
	oneof type {
		Command command = 2; // expect a response from the host app
		Hook hook = 3; // one way update only, no response expected
	}
}

message Command {
	optional int64 id = 1;
	optional bool no_response = 2; // opt-out of response from host app

	oneof command {
		TerminalIntegrationRequest terminal_integration_update = 100;
		ListTerminalIntegrations list_terminal_integrations = 101;
	}
}

message Hook {
	oneof hook {
		EditBuffer editbuffer = 100;
		Prompt prompt = 101;
	}
}

// Example Command
enum IntegrationAction {
	INSTALL = 0;
	VERIFY_INSTALL = 1;
	UNINSTALL = 2;
}
message TerminalIntegrationRequest {
	string identifier = 1;
	IntegrationAction action = 2;
}

message ListTerminalIntegrations { }

message TerminalIntegration {
	string bundle_identifier = 1;
	string name = 2;
	optional string status = 3;
}

message TerminalIntegrationsList {
	repeated TerminalIntegration integrations = 1;
}

message ShellContext {
	int32 pid = 1;
	string ttys = 2; // /dev/ttys## of terminal session
	string shell = 3; // the name of the shell
	string currentWorkingDirectory = 4; // the directory where the user ran the command
	string sessionId = 5; // the value of $TERM_SESSION_ID 
	optional string integration_version = 6;
	optional string terminal = 7;
}

// Example Hook
message EditBuffer {
	string text = 1;
	int64 cursor = 2;
	string shell = 3;
	string sessionId = 4;
	string integration_version = 5;

	ShellContext context = 6;
}

message Prompt {
	ShellContext context = 1;
}

message PreExec {
	ShellContext context = 1;

	string command = 2; // the full command that was run in the shell

}

message PostExec {
	ShellContext context = 1;

	string command = 2; // the full command that was run in the shell
	int32 exit_code = 3; // the exit code of the command
}

message keyboardFocusChanged {
	string bundle_identifier = 1;
	string focused_session = 2; // a unique identifier associated with the pane or tab that is currently focused
}

message tmuxPaneChanged {
	int32 pane_identifier = 1;
}

message openedSSHConnection {
	ShellContext context = 1;
	string control_path = 2;
}

// 
message Error {
	optional int32 exit_code = 1;
	optional string message = 2;
}

message Success {
	optional string message = 1;
}

message CommandResponse {
	optional int64 id = 1;
	oneof response {
		Error error = 2;
		Success success = 3;
		TerminalIntegrationsList integration_list = 100;

		// ... add structured responses for specific commands, as necessary
	}
}