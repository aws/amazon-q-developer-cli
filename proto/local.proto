syntax = "proto3";

option objc_class_prefix = "FIG";
option go_package = "fig_proto";

package local;

message LocalMessage {
	oneof type {
		Command command = 2; // expect a response from the host app
		Hook hook = 3; // one way update only, no response expected
	}
}

message Command {
	optional int64 id = 1;
	optional bool no_response = 2; // opt-out of response from host app

	oneof command {
		TerminalIntegrationCommand terminal_integration = 100;
		ListTerminalIntegrationsCommand list_terminal_integrations = 101;
		LogoutCommand logout = 102;
		RestartCommand restart = 103;
		QuitCommand quit = 104;
		UpdateCommand update = 105;
		DiagnosticsCommand diagnostics = 106;
	}
}

message Hook {
	oneof hook {
		EditBufferHook editbuffer = 100;
		PromptHook prompt = 101;
		PreExecHook preexec = 102;
		PostExecHook postexec = 103;
		KeyboardFocusChangedHook keyboardfocuschanged = 104;
		TmuxPaneChangedHook tmuxpanechanged = 105;
		OpenedSSHConnectionHook openedsshconnection = 106;
		CallbackHook callback = 107;

	}
}

// == Commands ==
enum IntegrationAction {
	INSTALL = 0;
	VERIFY_INSTALL = 1;
	UNINSTALL = 2;
}

message TerminalIntegrationCommand {
	string identifier = 1;
	IntegrationAction action = 2;
}

message ListTerminalIntegrationsCommand { }

message LogoutCommand { }

message RestartCommand { }

message QuitCommand { }

message UpdateCommand {
	bool force = 1;
}

message DiagnosticsCommand {}

// == Hooks ==
message ShellContext {
	int32 pid = 1;
	string ttys = 2; // /dev/ttys## of terminal session
	string shell = 3; // the name of the shell
	string currentWorkingDirectory = 4; // the directory where the user ran the command
	string sessionId = 5; // the value of $TERM_SESSION_ID 
	optional string integration_version = 6;
	optional string terminal = 7;
}

message EditBufferHook {
	ShellContext context = 1;

	string text = 2;
	int64 cursor = 3;
	int64 histno = 4;
	//string integration_version = 3;
	//string shell = 3;
	//string sessionId = 4;
}

message PromptHook {
	ShellContext context = 1;
}

message PreExecHook {
	ShellContext context = 1;

	string command = 2; // the full command that was run in the shell
}

message PostExecHook {
	ShellContext context = 1;

	string command = 2; // the full command that was run in the shell
	int32 exit_code = 3; // the exit code of the command
}

message KeyboardFocusChangedHook {
	string bundle_identifier = 1;
	string focused_session = 2; // a unique identifier associated with the pane or tab that is currently focused
}

message TmuxPaneChangedHook {
	int32 pane_identifier = 1;
}

message OpenedSSHConnectionHook {
	ShellContext context = 1;

	string control_path = 2;
}

message CallbackHook {
	string handler_id = 1;
	string filepath = 2;
	string exit_code = 3;
}

// == Responses ==
message ErrorResponse {
	optional int32 exit_code = 1;
	optional string message = 2;
}

message SuccessResponse {
	optional string message = 1;
}

message TerminalIntegration {
	string bundle_identifier = 1;
	string name = 2;
	optional string status = 3;
}

message TerminalIntegrationsListResponse {
	repeated TerminalIntegration integrations = 1;
}

message DiagnosticsResponse {
	string path_to_bundle = 1;
	string accessibility = 2;
	string keypath = 3;
	string docker = 4;
	string symlinked = 5;
	string onlytab = 6;
	string installscript = 7;
	string psudopath = 8;
	string securekeyboard = 9;
	string securekeyboard_path = 10;
	string current_process = 11;
	string current_window_identifier = 12;
}

message CommandResponse {
	optional int64 id = 1;
	oneof response {
		ErrorResponse error = 2;
		SuccessResponse success = 3;

		// ... add structured responses for specific commands, as necessary
		TerminalIntegrationsListResponse integration_list = 100;
		DiagnosticsResponse diagnostics = 101;
	}
}