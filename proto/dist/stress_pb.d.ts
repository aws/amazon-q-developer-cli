// @generated by protoc-gen-es v2.2.5 with parameter "target=js+dts,import_extension=js,json_types=false"
// @generated from file stress.proto (package stress, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Empty } from "./fig_common_pb.js";

/**
 * Describes the file stress.proto.
 */
export declare const file_stress: GenFile;

/**
 * @generated from message stress.Serverbound
 */
export declare type Serverbound = Message<"stress.Serverbound"> & {
  /**
   * @generated from oneof stress.Serverbound.inner
   */
  inner: {
    /**
     * @generated from field: stress.Serverbound.Setup setup = 1;
     */
    value: Serverbound_Setup;
    case: "setup";
  } | {
    /**
     * @generated from field: fig_common.Empty request_report = 2;
     */
    value: Empty;
    case: "requestReport";
  } | {
    /**
     * @generated from field: stress.Serverbound.IncrementTest increment_test = 3;
     */
    value: Serverbound_IncrementTest;
    case: "incrementTest";
  } | {
    /**
     * @generated from field: stress.Serverbound.EchoResponse echo_response = 4;
     */
    value: Serverbound_EchoResponse;
    case: "echoResponse";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message stress.Serverbound.
 * Use `create(ServerboundSchema)` to create a new message.
 */
export declare const ServerboundSchema: GenMessage<Serverbound>;

/**
 * @generated from message stress.Serverbound.Setup
 */
export declare type Serverbound_Setup = Message<"stress.Serverbound.Setup"> & {
  /**
   * @generated from field: stress.Serverbound.StressKind kind = 1;
   */
  kind: Serverbound_StressKind;

  /**
   * @generated from field: int64 i = 2;
   */
  i: bigint;

  /**
   * @generated from field: int64 cycles = 3;
   */
  cycles: bigint;

  /**
   * @generated from field: int64 payload_size = 4;
   */
  payloadSize: bigint;
};

/**
 * Describes the message stress.Serverbound.Setup.
 * Use `create(Serverbound_SetupSchema)` to create a new message.
 */
export declare const Serverbound_SetupSchema: GenMessage<Serverbound_Setup>;

/**
 * @generated from message stress.Serverbound.IncrementTest
 */
export declare type Serverbound_IncrementTest = Message<"stress.Serverbound.IncrementTest"> & {
  /**
   * @generated from field: int64 number = 1;
   */
  number: bigint;
};

/**
 * Describes the message stress.Serverbound.IncrementTest.
 * Use `create(Serverbound_IncrementTestSchema)` to create a new message.
 */
export declare const Serverbound_IncrementTestSchema: GenMessage<Serverbound_IncrementTest>;

/**
 * @generated from message stress.Serverbound.EchoResponse
 */
export declare type Serverbound_EchoResponse = Message<"stress.Serverbound.EchoResponse"> & {
  /**
   * @generated from field: string payload = 1;
   */
  payload: string;
};

/**
 * Describes the message stress.Serverbound.EchoResponse.
 * Use `create(Serverbound_EchoResponseSchema)` to create a new message.
 */
export declare const Serverbound_EchoResponseSchema: GenMessage<Serverbound_EchoResponse>;

/**
 * @generated from enum stress.Serverbound.StressKind
 */
export enum Serverbound_StressKind {
  /**
   * @generated from enum value: STRESS_KIND_INCREMENT = 0;
   */
  INCREMENT = 0,

  /**
   * @generated from enum value: STRESS_KIND_ECHO = 1;
   */
  ECHO = 1,
}

/**
 * Describes the enum stress.Serverbound.StressKind.
 */
export declare const Serverbound_StressKindSchema: GenEnum<Serverbound_StressKind>;

/**
 * @generated from message stress.Clientbound
 */
export declare type Clientbound = Message<"stress.Clientbound"> & {
  /**
   * @generated from oneof stress.Clientbound.inner
   */
  inner: {
    /**
     * @generated from field: fig_common.Empty ready = 1;
     */
    value: Empty;
    case: "ready";
  } | {
    /**
     * @generated from field: stress.Clientbound.Report report = 2;
     */
    value: Clientbound_Report;
    case: "report";
  } | {
    /**
     * @generated from field: stress.Clientbound.EchoTest echo_test = 3;
     */
    value: Clientbound_EchoTest;
    case: "echoTest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message stress.Clientbound.
 * Use `create(ClientboundSchema)` to create a new message.
 */
export declare const ClientboundSchema: GenMessage<Clientbound>;

/**
 * @generated from message stress.Clientbound.Report
 */
export declare type Clientbound_Report = Message<"stress.Clientbound.Report"> & {
  /**
   * @generated from field: optional string message = 1;
   */
  message?: string;
};

/**
 * Describes the message stress.Clientbound.Report.
 * Use `create(Clientbound_ReportSchema)` to create a new message.
 */
export declare const Clientbound_ReportSchema: GenMessage<Clientbound_Report>;

/**
 * @generated from message stress.Clientbound.EchoTest
 */
export declare type Clientbound_EchoTest = Message<"stress.Clientbound.EchoTest"> & {
  /**
   * @generated from field: string payload = 1;
   */
  payload: string;
};

/**
 * Describes the message stress.Clientbound.EchoTest.
 * Use `create(Clientbound_EchoTestSchema)` to create a new message.
 */
export declare const Clientbound_EchoTestSchema: GenMessage<Clientbound_EchoTest>;

