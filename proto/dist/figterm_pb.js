// @generated by protoc-gen-es v2.2.5 with parameter "target=js+dts,import_extension=js,json_types=false"
// @generated from file figterm.proto (package figterm, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_fig_common } from "./fig_common_pb.js";

/**
 * Describes the file figterm.proto.
 */
export const file_figterm = /*@__PURE__*/
  fileDesc("Cg1maWd0ZXJtLnByb3RvEgdmaWd0ZXJtIusFChVGaWd0ZXJtUmVxdWVzdE1lc3NhZ2USLgoJaW50ZXJjZXB0GAEgASgLMhkuZmlndGVybS5JbnRlcmNlcHRSZXF1ZXN0SAASMQoLaW5zZXJ0X3RleHQYAiABKAsyGi5maWd0ZXJtLkluc2VydFRleHRSZXF1ZXN0SAASLwoKc2V0X2J1ZmZlchgDIAEoCzIZLmZpZ3Rlcm0uU2V0QnVmZmVyUmVxdWVzdEgAEjIKC2RpYWdub3N0aWNzGAQgASgLMhsuZmlndGVybS5EaWFnbm9zdGljc1JlcXVlc3RIABI7ChFpbnNlcnRfb25fbmV3X2NtZBgFIAEoCzIeLmZpZ3Rlcm0uSW5zZXJ0T25OZXdDbWRSZXF1ZXN0SAASQgoUdXBkYXRlX3NoZWxsX2NvbnRleHQYBiABKAsyIi5maWd0ZXJtLlVwZGF0ZVNoZWxsQ29udGV4dFJlcXVlc3RIABJNChpub3RpZnlfc3NoX3Nlc3Npb25fc3RhcnRlZBgHIAEoCzInLmZpZ3Rlcm0uTm90aWZ5U1NIU2Vzc2lvblN0YXJ0ZWRSZXF1ZXN0SAASSAoXaW5saW5lX3NoZWxsX2NvbXBsZXRpb24YCCABKAsyJS5maWd0ZXJtLklubGluZVNoZWxsQ29tcGxldGlvblJlcXVlc3RIABJVCh5pbmxpbmVfc2hlbGxfY29tcGxldGlvbl9hY2NlcHQYCSABKAsyKy5maWd0ZXJtLklubGluZVNoZWxsQ29tcGxldGlvbkFjY2VwdFJlcXVlc3RIABIuCgl0ZWxlbXRldHkYCiABKAsyGS5maWd0ZXJtLlRlbGVtZXRyeVJlcXVlc3RIABJeCiNpbmxpbmVfc2hlbGxfY29tcGxldGlvbl9zZXRfZW5hYmxlZBgLIAEoCzIvLmZpZ3Rlcm0uSW5saW5lU2hlbGxDb21wbGV0aW9uU2V0RW5hYmxlZFJlcXVlc3RIAEIJCgdyZXF1ZXN0IqQBChZGaWd0ZXJtUmVzcG9uc2VNZXNzYWdlEjMKC2RpYWdub3N0aWNzGAEgASgLMhwuZmlndGVybS5EaWFnbm9zdGljc1Jlc3BvbnNlSAASSQoXaW5saW5lX3NoZWxsX2NvbXBsZXRpb24YAiABKAsyJi5maWd0ZXJtLklubGluZVNoZWxsQ29tcGxldGlvblJlc3BvbnNlSABCCgoIcmVzcG9uc2UiLgoGQWN0aW9uEhIKCmlkZW50aWZpZXIYASABKAkSEAoIYmluZGluZ3MYAiADKAkigwMKEEludGVyY2VwdFJlcXVlc3QSTAoUc2V0X2ZpZ2pzX2ludGVyY2VwdHMYBiABKAsyLC5maWd0ZXJtLkludGVyY2VwdFJlcXVlc3QuU2V0RmlnanNJbnRlcmNlcHRzSAASRgoRc2V0X2ZpZ2pzX3Zpc2libGUYByABKAsyKS5maWd0ZXJtLkludGVyY2VwdFJlcXVlc3QuU2V0RmlnanNWaXNpYmxlSAAamQEKElNldEZpZ2pzSW50ZXJjZXB0cxIiChppbnRlcmNlcHRfYm91bmRfa2V5c3Ryb2tlcxgBIAEoCBIjChtpbnRlcmNlcHRfZ2xvYmFsX2tleXN0cm9rZXMYAiABKAgSIAoHYWN0aW9ucxgDIAMoCzIPLmZpZ3Rlcm0uQWN0aW9uEhgKEG92ZXJyaWRlX2FjdGlvbnMYBCABKAgaIgoPU2V0RmlnanNWaXNpYmxlEg8KB3Zpc2libGUYASABKAhCEwoRaW50ZXJjZXB0X2NvbW1hbmRKBAgBEAYilQIKEUluc2VydFRleHRSZXF1ZXN0EhYKCWluc2VydGlvbhgBIAEoCUgAiAEBEhUKCGRlbGV0aW9uGAIgASgESAGIAQESEwoGb2Zmc2V0GAMgASgDSAKIAQESFgoJaW1tZWRpYXRlGAQgASgISAOIAQESHQoQaW5zZXJ0aW9uX2J1ZmZlchgFIAEoCUgEiAEBEiIKFWluc2VydF9kdXJpbmdfY29tbWFuZBgGIAEoCEgFiAEBQgwKCl9pbnNlcnRpb25CCwoJX2RlbGV0aW9uQgkKB19vZmZzZXRCDAoKX2ltbWVkaWF0ZUITChFfaW5zZXJ0aW9uX2J1ZmZlckIYChZfaW5zZXJ0X2R1cmluZ19jb21tYW5kIlIKEFNldEJ1ZmZlclJlcXVlc3QSDAoEdGV4dBgBIAEoCRIcCg9jdXJzb3JfcG9zaXRpb24YAiABKARIAIgBAUISChBfY3Vyc29yX3Bvc2l0aW9uInYKCVRlcm1Db2xvchIlCgNyZ2IYASABKAsyFi5maWd0ZXJtLlRlcm1Db2xvci5SZ2JIABIRCgdpbmRleGVkGAIgASgNSAAaJgoDUmdiEgkKAXIYASABKAUSCQoBYhgCIAEoBRIJCgFnGAMgASgFQgcKBWNvbG9yImMKCVRlcm1TdHlsZRIjCgJmZxgBIAEoCzISLmZpZ3Rlcm0uVGVybUNvbG9ySACIAQESIwoCYmcYAiABKAsyEi5maWd0ZXJtLlRlcm1Db2xvckgBiAEBQgUKA19mZ0IFCgNfYmciFAoSRGlhZ25vc3RpY3NSZXF1ZXN0IuMCChNEaWFnbm9zdGljc1Jlc3BvbnNlEjQKDXNoZWxsX2NvbnRleHQYASABKAsyGC5maWdfY29tbW9uLlNoZWxsQ29udGV4dEgAiAEBEjYKFWZpc2hfc3VnZ2VzdGlvbl9zdHlsZRgCIAEoCzISLmZpZ3Rlcm0uVGVybVN0eWxlSAGIAQESOQoYenNoX2F1dG9zdWdnZXN0aW9uX3N0eWxlGAMgASgLMhIuZmlndGVybS5UZXJtU3R5bGVIAogBARIYCgtlZGl0X2J1ZmZlchgEIAEoCUgDiAEBEhwKD2N1cnNvcl9wb3NpdGlvbhgFIAEoDUgEiAEBQhAKDl9zaGVsbF9jb250ZXh0QhgKFl9maXNoX3N1Z2dlc3Rpb25fc3R5bGVCGwoZX3pzaF9hdXRvc3VnZ2VzdGlvbl9zdHlsZUIOCgxfZWRpdF9idWZmZXJCEgoQX2N1cnNvcl9wb3NpdGlvbiJJChVJbnNlcnRPbk5ld0NtZFJlcXVlc3QSDAoEdGV4dBgBIAEoCRIPCgdleGVjdXRlGAIgASgIEhEKCWJyYWNrZXRlZBgDIAEoCCK1AQoZVXBkYXRlU2hlbGxDb250ZXh0UmVxdWVzdBIkChx1cGRhdGVfZW52aXJvbm1lbnRfdmFyaWFibGVzGAEgASgIEj4KFWVudmlyb25tZW50X3ZhcmlhYmxlcxgCIAMoCzIfLmZpZ19jb21tb24uRW52aXJvbm1lbnRWYXJpYWJsZRIUCgx1cGRhdGVfYWxpYXMYAyABKAgSEgoFYWxpYXMYBCABKAlIAIgBAUIICgZfYWxpYXMiQwoeTm90aWZ5U1NIU2Vzc2lvblN0YXJ0ZWRSZXF1ZXN0EgwKBHV1aWQYASABKAkSEwoLcmVtb3RlX2hvc3QYAiABKAkiLgocSW5saW5lU2hlbGxDb21wbGV0aW9uUmVxdWVzdBIOCgZidWZmZXIYASABKAkiSQodSW5saW5lU2hlbGxDb21wbGV0aW9uUmVzcG9uc2USGAoLaW5zZXJ0X3RleHQYASABKAlIAIgBAUIOCgxfaW5zZXJ0X3RleHQiSAoiSW5saW5lU2hlbGxDb21wbGV0aW9uQWNjZXB0UmVxdWVzdBIOCgZidWZmZXIYASABKAkSEgoKc3VnZ2VzdGlvbhgCIAEoCSI5CiZJbmxpbmVTaGVsbENvbXBsZXRpb25TZXRFbmFibGVkUmVxdWVzdBIPCgdlbmFibGVkGAEgASgIIiYKEFRlbGVtZXRyeVJlcXVlc3QSEgoKZXZlbnRfYmxvYhgBIAEoCWIGcHJvdG8z", [file_fig_common]);

/**
 * Describes the message figterm.FigtermRequestMessage.
 * Use `create(FigtermRequestMessageSchema)` to create a new message.
 */
export const FigtermRequestMessageSchema = /*@__PURE__*/
  messageDesc(file_figterm, 0);

/**
 * Describes the message figterm.FigtermResponseMessage.
 * Use `create(FigtermResponseMessageSchema)` to create a new message.
 */
export const FigtermResponseMessageSchema = /*@__PURE__*/
  messageDesc(file_figterm, 1);

/**
 * Describes the message figterm.Action.
 * Use `create(ActionSchema)` to create a new message.
 */
export const ActionSchema = /*@__PURE__*/
  messageDesc(file_figterm, 2);

/**
 * Describes the message figterm.InterceptRequest.
 * Use `create(InterceptRequestSchema)` to create a new message.
 */
export const InterceptRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 3);

/**
 * Describes the message figterm.InterceptRequest.SetFigjsIntercepts.
 * Use `create(InterceptRequest_SetFigjsInterceptsSchema)` to create a new message.
 */
export const InterceptRequest_SetFigjsInterceptsSchema = /*@__PURE__*/
  messageDesc(file_figterm, 3, 0);

/**
 * Describes the message figterm.InterceptRequest.SetFigjsVisible.
 * Use `create(InterceptRequest_SetFigjsVisibleSchema)` to create a new message.
 */
export const InterceptRequest_SetFigjsVisibleSchema = /*@__PURE__*/
  messageDesc(file_figterm, 3, 1);

/**
 * Describes the message figterm.InsertTextRequest.
 * Use `create(InsertTextRequestSchema)` to create a new message.
 */
export const InsertTextRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 4);

/**
 * Describes the message figterm.SetBufferRequest.
 * Use `create(SetBufferRequestSchema)` to create a new message.
 */
export const SetBufferRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 5);

/**
 * Describes the message figterm.TermColor.
 * Use `create(TermColorSchema)` to create a new message.
 */
export const TermColorSchema = /*@__PURE__*/
  messageDesc(file_figterm, 6);

/**
 * Describes the message figterm.TermColor.Rgb.
 * Use `create(TermColor_RgbSchema)` to create a new message.
 */
export const TermColor_RgbSchema = /*@__PURE__*/
  messageDesc(file_figterm, 6, 0);

/**
 * Describes the message figterm.TermStyle.
 * Use `create(TermStyleSchema)` to create a new message.
 */
export const TermStyleSchema = /*@__PURE__*/
  messageDesc(file_figterm, 7);

/**
 * Describes the message figterm.DiagnosticsRequest.
 * Use `create(DiagnosticsRequestSchema)` to create a new message.
 */
export const DiagnosticsRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 8);

/**
 * Describes the message figterm.DiagnosticsResponse.
 * Use `create(DiagnosticsResponseSchema)` to create a new message.
 */
export const DiagnosticsResponseSchema = /*@__PURE__*/
  messageDesc(file_figterm, 9);

/**
 * Describes the message figterm.InsertOnNewCmdRequest.
 * Use `create(InsertOnNewCmdRequestSchema)` to create a new message.
 */
export const InsertOnNewCmdRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 10);

/**
 * Describes the message figterm.UpdateShellContextRequest.
 * Use `create(UpdateShellContextRequestSchema)` to create a new message.
 */
export const UpdateShellContextRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 11);

/**
 * Describes the message figterm.NotifySSHSessionStartedRequest.
 * Use `create(NotifySSHSessionStartedRequestSchema)` to create a new message.
 */
export const NotifySSHSessionStartedRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 12);

/**
 * Describes the message figterm.InlineShellCompletionRequest.
 * Use `create(InlineShellCompletionRequestSchema)` to create a new message.
 */
export const InlineShellCompletionRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 13);

/**
 * Describes the message figterm.InlineShellCompletionResponse.
 * Use `create(InlineShellCompletionResponseSchema)` to create a new message.
 */
export const InlineShellCompletionResponseSchema = /*@__PURE__*/
  messageDesc(file_figterm, 14);

/**
 * Describes the message figterm.InlineShellCompletionAcceptRequest.
 * Use `create(InlineShellCompletionAcceptRequestSchema)` to create a new message.
 */
export const InlineShellCompletionAcceptRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 15);

/**
 * Describes the message figterm.InlineShellCompletionSetEnabledRequest.
 * Use `create(InlineShellCompletionSetEnabledRequestSchema)` to create a new message.
 */
export const InlineShellCompletionSetEnabledRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 16);

/**
 * Describes the message figterm.TelemetryRequest.
 * Use `create(TelemetryRequestSchema)` to create a new message.
 */
export const TelemetryRequestSchema = /*@__PURE__*/
  messageDesc(file_figterm, 17);

