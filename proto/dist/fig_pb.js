// @generated by protoc-gen-es v2.2.5 with parameter "target=js+dts,import_extension=js,json_types=false"
// @generated from file fig.proto (package fig, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_fig_common } from "./fig_common_pb.js";

/**
 * Describes the file fig.proto.
 */
export const file_fig = /*@__PURE__*/
  fileDesc("", [file_fig_common]);

/**
 * Describes the message fig.ClientOriginatedMessage.
 * Use `create(ClientOriginatedMessageSchema)` to create a new message.
 */
export const ClientOriginatedMessageSchema = /*@__PURE__*/
  messageDesc(file_fig, 0);

/**
 * Describes the message fig.ServerOriginatedMessage.
 * Use `create(ServerOriginatedMessageSchema)` to create a new message.
 */
export const ServerOriginatedMessageSchema = /*@__PURE__*/
  messageDesc(file_fig, 1);

/**
 * Describes the message fig.Point.
 * Use `create(PointSchema)` to create a new message.
 */
export const PointSchema = /*@__PURE__*/
  messageDesc(file_fig, 2);

/**
 * Describes the message fig.Size.
 * Use `create(SizeSchema)` to create a new message.
 */
export const SizeSchema = /*@__PURE__*/
  messageDesc(file_fig, 3);

/**
 * Describes the message fig.Frame.
 * Use `create(FrameSchema)` to create a new message.
 */
export const FrameSchema = /*@__PURE__*/
  messageDesc(file_fig, 4);

/**
 * Describes the message fig.Process.
 * Use `create(ProcessSchema)` to create a new message.
 */
export const ProcessSchema = /*@__PURE__*/
  messageDesc(file_fig, 5);

/**
 * Describes the message fig.FilePath.
 * Use `create(FilePathSchema)` to create a new message.
 */
export const FilePathSchema = /*@__PURE__*/
  messageDesc(file_fig, 6);

/**
 * Describes the message fig.KeyEvent.
 * Use `create(KeyEventSchema)` to create a new message.
 */
export const KeyEventSchema = /*@__PURE__*/
  messageDesc(file_fig, 7);

/**
 * Describes the message fig.Screen.
 * Use `create(ScreenSchema)` to create a new message.
 */
export const ScreenSchema = /*@__PURE__*/
  messageDesc(file_fig, 8);

/**
 * Describes the message fig.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema = /*@__PURE__*/
  messageDesc(file_fig, 9);

/**
 * Describes the message fig.Application.
 * Use `create(ApplicationSchema)` to create a new message.
 */
export const ApplicationSchema = /*@__PURE__*/
  messageDesc(file_fig, 10);

/**
 * Describes the message fig.Window.
 * Use `create(WindowSchema)` to create a new message.
 */
export const WindowSchema = /*@__PURE__*/
  messageDesc(file_fig, 11);

/**
 * Describes the message fig.Result.
 * Use `create(ResultSchema)` to create a new message.
 */
export const ResultSchema = /*@__PURE__*/
  messageDesc(file_fig, 12);

/**
 * Describes the enum fig.Result.Result.
 */
export const Result_ResultSchema = /*@__PURE__*/
  enumDesc(file_fig, 12, 0);

/**
 * @generated from enum fig.Result.Result
 */
export const Result_Result = /*@__PURE__*/
  tsEnum(Result_ResultSchema);

/**
 * Describes the message fig.TextUpdate.
 * Use `create(TextUpdateSchema)` to create a new message.
 */
export const TextUpdateSchema = /*@__PURE__*/
  messageDesc(file_fig, 13);

/**
 * Describes the message fig.InsertTextRequest.
 * Use `create(InsertTextRequestSchema)` to create a new message.
 */
export const InsertTextRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 14);

/**
 * Describes the message fig.PositionWindowRequest.
 * Use `create(PositionWindowRequestSchema)` to create a new message.
 */
export const PositionWindowRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 15);

/**
 * Describes the message fig.PositionWindowResponse.
 * Use `create(PositionWindowResponseSchema)` to create a new message.
 */
export const PositionWindowResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 16);

/**
 * Describes the message fig.ReadFileRequest.
 * Use `create(ReadFileRequestSchema)` to create a new message.
 */
export const ReadFileRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 17);

/**
 * Describes the message fig.ReadFileResponse.
 * Use `create(ReadFileResponseSchema)` to create a new message.
 */
export const ReadFileResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 18);

/**
 * Describes the message fig.WriteFileRequest.
 * Use `create(WriteFileRequestSchema)` to create a new message.
 */
export const WriteFileRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 19);

/**
 * Describes the message fig.AppendToFileRequest.
 * Use `create(AppendToFileRequestSchema)` to create a new message.
 */
export const AppendToFileRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 20);

/**
 * Describes the message fig.ContentsOfDirectoryRequest.
 * Use `create(ContentsOfDirectoryRequestSchema)` to create a new message.
 */
export const ContentsOfDirectoryRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 21);

/**
 * Describes the message fig.ContentsOfDirectoryResponse.
 * Use `create(ContentsOfDirectoryResponseSchema)` to create a new message.
 */
export const ContentsOfDirectoryResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 22);

/**
 * Describes the message fig.DestinationOfSymbolicLinkRequest.
 * Use `create(DestinationOfSymbolicLinkRequestSchema)` to create a new message.
 */
export const DestinationOfSymbolicLinkRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 23);

/**
 * Describes the message fig.DestinationOfSymbolicLinkResponse.
 * Use `create(DestinationOfSymbolicLinkResponseSchema)` to create a new message.
 */
export const DestinationOfSymbolicLinkResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 24);

/**
 * Describes the message fig.CreateDirectoryRequest.
 * Use `create(CreateDirectoryRequestSchema)` to create a new message.
 */
export const CreateDirectoryRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 25);

/**
 * Describes the message fig.GetSettingsPropertyRequest.
 * Use `create(GetSettingsPropertyRequestSchema)` to create a new message.
 */
export const GetSettingsPropertyRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 26);

/**
 * Describes the message fig.GetSettingsPropertyResponse.
 * Use `create(GetSettingsPropertyResponseSchema)` to create a new message.
 */
export const GetSettingsPropertyResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 27);

/**
 * Describes the message fig.UpdateSettingsPropertyRequest.
 * Use `create(UpdateSettingsPropertyRequestSchema)` to create a new message.
 */
export const UpdateSettingsPropertyRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 28);

/**
 * Describes the message fig.TelemetryProperty.
 * Use `create(TelemetryPropertySchema)` to create a new message.
 */
export const TelemetryPropertySchema = /*@__PURE__*/
  messageDesc(file_fig, 29);

/**
 * Describes the message fig.TelemetryTrackRequest.
 * Use `create(TelemetryTrackRequestSchema)` to create a new message.
 */
export const TelemetryTrackRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 30);

/**
 * Describes the message fig.TelemetryPageRequest.
 * Use `create(TelemetryPageRequestSchema)` to create a new message.
 */
export const TelemetryPageRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 31);

/**
 * Describes the message fig.AggregateSessionMetricActionRequest.
 * Use `create(AggregateSessionMetricActionRequestSchema)` to create a new message.
 */
export const AggregateSessionMetricActionRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 32);

/**
 * Describes the message fig.AggregateSessionMetricActionRequest.Increment.
 * Use `create(AggregateSessionMetricActionRequest_IncrementSchema)` to create a new message.
 */
export const AggregateSessionMetricActionRequest_IncrementSchema = /*@__PURE__*/
  messageDesc(file_fig, 32, 0);

/**
 * Describes the message fig.OnboardingRequest.
 * Use `create(OnboardingRequestSchema)` to create a new message.
 */
export const OnboardingRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 33);

/**
 * Describes the message fig.InstallRequest.
 * Use `create(InstallRequestSchema)` to create a new message.
 */
export const InstallRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 34);

/**
 * Describes the message fig.InstallResponse.
 * Use `create(InstallResponseSchema)` to create a new message.
 */
export const InstallResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 35);

/**
 * Describes the enum fig.InstallResponse.InstallationStatus.
 */
export const InstallResponse_InstallationStatusSchema = /*@__PURE__*/
  enumDesc(file_fig, 35, 0);

/**
 * @generated from enum fig.InstallResponse.InstallationStatus
 */
export const InstallResponse_InstallationStatus = /*@__PURE__*/
  tsEnum(InstallResponse_InstallationStatusSchema);

/**
 * Describes the message fig.GetPlatformInfoRequest.
 * Use `create(GetPlatformInfoRequestSchema)` to create a new message.
 */
export const GetPlatformInfoRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 36);

/**
 * Describes the message fig.GetPlatformInfoResponse.
 * Use `create(GetPlatformInfoResponseSchema)` to create a new message.
 */
export const GetPlatformInfoResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 37);

/**
 * Describes the message fig.Profile.
 * Use `create(ProfileSchema)` to create a new message.
 */
export const ProfileSchema = /*@__PURE__*/
  messageDesc(file_fig, 38);

/**
 * Describes the message fig.ListAvailableProfilesRequest.
 * Use `create(ListAvailableProfilesRequestSchema)` to create a new message.
 */
export const ListAvailableProfilesRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 39);

/**
 * Describes the message fig.ListAvailableProfilesResponse.
 * Use `create(ListAvailableProfilesResponseSchema)` to create a new message.
 */
export const ListAvailableProfilesResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 40);

/**
 * Describes the message fig.SetProfileRequest.
 * Use `create(SetProfileRequestSchema)` to create a new message.
 */
export const SetProfileRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 41);

/**
 * Describes the message fig.UserLogoutRequest.
 * Use `create(UserLogoutRequestSchema)` to create a new message.
 */
export const UserLogoutRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 42);

/**
 * Describes the message fig.WindowFocusRequest.
 * Use `create(WindowFocusRequestSchema)` to create a new message.
 */
export const WindowFocusRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 43);

/**
 * Describes the message fig.OpenInExternalApplicationRequest.
 * Use `create(OpenInExternalApplicationRequestSchema)` to create a new message.
 */
export const OpenInExternalApplicationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 44);

/**
 * Describes the message fig.CheckForUpdatesRequest.
 * Use `create(CheckForUpdatesRequestSchema)` to create a new message.
 */
export const CheckForUpdatesRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 45);

/**
 * Describes the message fig.CheckForUpdatesResponse.
 * Use `create(CheckForUpdatesResponseSchema)` to create a new message.
 */
export const CheckForUpdatesResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 46);

/**
 * Describes the message fig.UpdateApplicationRequest.
 * Use `create(UpdateApplicationRequestSchema)` to create a new message.
 */
export const UpdateApplicationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 47);

/**
 * Describes the message fig.Action.
 * Use `create(ActionSchema)` to create a new message.
 */
export const ActionSchema = /*@__PURE__*/
  messageDesc(file_fig, 48);

/**
 * Describes the message fig.ActionList.
 * Use `create(ActionListSchema)` to create a new message.
 */
export const ActionListSchema = /*@__PURE__*/
  messageDesc(file_fig, 49);

/**
 * Describes the message fig.UpdateApplicationPropertiesRequest.
 * Use `create(UpdateApplicationPropertiesRequestSchema)` to create a new message.
 */
export const UpdateApplicationPropertiesRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 50);

/**
 * Describes the message fig.GetLocalStateRequest.
 * Use `create(GetLocalStateRequestSchema)` to create a new message.
 */
export const GetLocalStateRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 51);

/**
 * Describes the message fig.GetLocalStateResponse.
 * Use `create(GetLocalStateResponseSchema)` to create a new message.
 */
export const GetLocalStateResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 52);

/**
 * Describes the message fig.UpdateLocalStateRequest.
 * Use `create(UpdateLocalStateRequestSchema)` to create a new message.
 */
export const UpdateLocalStateRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 53);

/**
 * Describes the message fig.RunProcessRequest.
 * Use `create(RunProcessRequestSchema)` to create a new message.
 */
export const RunProcessRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 54);

/**
 * Describes the message fig.RunProcessResponse.
 * Use `create(RunProcessResponseSchema)` to create a new message.
 */
export const RunProcessResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 55);

/**
 * Describes the message fig.HistoryQueryRequest.
 * Use `create(HistoryQueryRequestSchema)` to create a new message.
 */
export const HistoryQueryRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 56);

/**
 * Describes the message fig.HistoryQueryRequest.Param.
 * Use `create(HistoryQueryRequest_ParamSchema)` to create a new message.
 */
export const HistoryQueryRequest_ParamSchema = /*@__PURE__*/
  messageDesc(file_fig, 56, 0);

/**
 * Describes the message fig.HistoryQueryResponse.
 * Use `create(HistoryQueryResponseSchema)` to create a new message.
 */
export const HistoryQueryResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 57);

/**
 * Describes the message fig.AuthStartPkceAuthorizationRequest.
 * Use `create(AuthStartPkceAuthorizationRequestSchema)` to create a new message.
 */
export const AuthStartPkceAuthorizationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 58);

/**
 * Describes the message fig.AuthStartPkceAuthorizationResponse.
 * Use `create(AuthStartPkceAuthorizationResponseSchema)` to create a new message.
 */
export const AuthStartPkceAuthorizationResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 59);

/**
 * Describes the message fig.AuthFinishPkceAuthorizationRequest.
 * Use `create(AuthFinishPkceAuthorizationRequestSchema)` to create a new message.
 */
export const AuthFinishPkceAuthorizationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 60);

/**
 * Describes the message fig.AuthFinishPkceAuthorizationResponse.
 * Use `create(AuthFinishPkceAuthorizationResponseSchema)` to create a new message.
 */
export const AuthFinishPkceAuthorizationResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 61);

/**
 * Describes the message fig.AuthCancelPkceAuthorizationRequest.
 * Use `create(AuthCancelPkceAuthorizationRequestSchema)` to create a new message.
 */
export const AuthCancelPkceAuthorizationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 62);

/**
 * Describes the message fig.AuthCancelPkceAuthorizationResponse.
 * Use `create(AuthCancelPkceAuthorizationResponseSchema)` to create a new message.
 */
export const AuthCancelPkceAuthorizationResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 63);

/**
 * Describes the message fig.AuthBuilderIdStartDeviceAuthorizationRequest.
 * Use `create(AuthBuilderIdStartDeviceAuthorizationRequestSchema)` to create a new message.
 */
export const AuthBuilderIdStartDeviceAuthorizationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 64);

/**
 * Describes the message fig.AuthBuilderIdStartDeviceAuthorizationResponse.
 * Use `create(AuthBuilderIdStartDeviceAuthorizationResponseSchema)` to create a new message.
 */
export const AuthBuilderIdStartDeviceAuthorizationResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 65);

/**
 * Describes the message fig.AuthBuilderIdPollCreateTokenRequest.
 * Use `create(AuthBuilderIdPollCreateTokenRequestSchema)` to create a new message.
 */
export const AuthBuilderIdPollCreateTokenRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 66);

/**
 * Describes the message fig.AuthBuilderIdPollCreateTokenResponse.
 * Use `create(AuthBuilderIdPollCreateTokenResponseSchema)` to create a new message.
 */
export const AuthBuilderIdPollCreateTokenResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 67);

/**
 * Describes the enum fig.AuthBuilderIdPollCreateTokenResponse.PollStatus.
 */
export const AuthBuilderIdPollCreateTokenResponse_PollStatusSchema = /*@__PURE__*/
  enumDesc(file_fig, 67, 0);

/**
 * @generated from enum fig.AuthBuilderIdPollCreateTokenResponse.PollStatus
 */
export const AuthBuilderIdPollCreateTokenResponse_PollStatus = /*@__PURE__*/
  tsEnum(AuthBuilderIdPollCreateTokenResponse_PollStatusSchema);

/**
 * Describes the message fig.AuthStatusRequest.
 * Use `create(AuthStatusRequestSchema)` to create a new message.
 */
export const AuthStatusRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 68);

/**
 * Describes the message fig.AuthStatusResponse.
 * Use `create(AuthStatusResponseSchema)` to create a new message.
 */
export const AuthStatusResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 69);

/**
 * Describes the enum fig.AuthStatusResponse.AuthKind.
 */
export const AuthStatusResponse_AuthKindSchema = /*@__PURE__*/
  enumDesc(file_fig, 69, 0);

/**
 * @generated from enum fig.AuthStatusResponse.AuthKind
 */
export const AuthStatusResponse_AuthKind = /*@__PURE__*/
  tsEnum(AuthStatusResponse_AuthKindSchema);

/**
 * Describes the message fig.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 70);

/**
 * Describes the message fig.PingResponse.
 * Use `create(PingResponseSchema)` to create a new message.
 */
export const PingResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 71);

/**
 * Describes the message fig.CodewhispererCustomization.
 * Use `create(CodewhispererCustomizationSchema)` to create a new message.
 */
export const CodewhispererCustomizationSchema = /*@__PURE__*/
  messageDesc(file_fig, 72);

/**
 * Describes the message fig.CodewhispererListCustomizationRequest.
 * Use `create(CodewhispererListCustomizationRequestSchema)` to create a new message.
 */
export const CodewhispererListCustomizationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 73);

/**
 * Describes the message fig.CodewhispererListCustomizationResponse.
 * Use `create(CodewhispererListCustomizationResponseSchema)` to create a new message.
 */
export const CodewhispererListCustomizationResponseSchema = /*@__PURE__*/
  messageDesc(file_fig, 74);

/**
 * Describes the message fig.DragWindowRequest.
 * Use `create(DragWindowRequestSchema)` to create a new message.
 */
export const DragWindowRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 75);

/**
 * Describes the message fig.NotificationRequest.
 * Use `create(NotificationRequestSchema)` to create a new message.
 */
export const NotificationRequestSchema = /*@__PURE__*/
  messageDesc(file_fig, 76);

/**
 * Describes the message fig.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export const NotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 77);

/**
 * Describes the message fig.EditBufferChangedNotification.
 * Use `create(EditBufferChangedNotificationSchema)` to create a new message.
 */
export const EditBufferChangedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 78);

/**
 * Describes the message fig.SettingsChangedNotification.
 * Use `create(SettingsChangedNotificationSchema)` to create a new message.
 */
export const SettingsChangedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 79);

/**
 * Describes the message fig.ShellPromptReturnedNotification.
 * Use `create(ShellPromptReturnedNotificationSchema)` to create a new message.
 */
export const ShellPromptReturnedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 80);

/**
 * Describes the message fig.LocationChangedNotification.
 * Use `create(LocationChangedNotificationSchema)` to create a new message.
 */
export const LocationChangedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 81);

/**
 * Describes the message fig.ProcessChangedNotification.
 * Use `create(ProcessChangedNotificationSchema)` to create a new message.
 */
export const ProcessChangedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 82);

/**
 * Describes the message fig.KeybindingPressedNotification.
 * Use `create(KeybindingPressedNotificationSchema)` to create a new message.
 */
export const KeybindingPressedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 83);

/**
 * Describes the message fig.WindowFocusChangedNotification.
 * Use `create(WindowFocusChangedNotificationSchema)` to create a new message.
 */
export const WindowFocusChangedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 84);

/**
 * Describes the message fig.HistoryUpdatedNotification.
 * Use `create(HistoryUpdatedNotificationSchema)` to create a new message.
 */
export const HistoryUpdatedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 85);

/**
 * Describes the message fig.LocalStateChangedNotification.
 * Use `create(LocalStateChangedNotificationSchema)` to create a new message.
 */
export const LocalStateChangedNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 86);

/**
 * Describes the message fig.EventNotification.
 * Use `create(EventNotificationSchema)` to create a new message.
 */
export const EventNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 87);

/**
 * Describes the message fig.AccessibilityChangeNotification.
 * Use `create(AccessibilityChangeNotificationSchema)` to create a new message.
 */
export const AccessibilityChangeNotificationSchema = /*@__PURE__*/
  messageDesc(file_fig, 88);

/**
 * Describes the enum fig.Modifiers.
 */
export const ModifiersSchema = /*@__PURE__*/
  enumDesc(file_fig, 0);

/**
 * @generated from enum fig.Modifiers
 */
export const Modifiers = /*@__PURE__*/
  tsEnum(ModifiersSchema);

/**
 * Describes the enum fig.OnboardingAction.
 */
export const OnboardingActionSchema = /*@__PURE__*/
  enumDesc(file_fig, 1);

/**
 * @generated from enum fig.OnboardingAction
 */
export const OnboardingAction = /*@__PURE__*/
  tsEnum(OnboardingActionSchema);

/**
 * Describes the enum fig.InstallComponent.
 */
export const InstallComponentSchema = /*@__PURE__*/
  enumDesc(file_fig, 2);

/**
 * @generated from enum fig.InstallComponent
 */
export const InstallComponent = /*@__PURE__*/
  tsEnum(InstallComponentSchema);

/**
 * Describes the enum fig.InstallAction.
 */
export const InstallActionSchema = /*@__PURE__*/
  enumDesc(file_fig, 3);

/**
 * @generated from enum fig.InstallAction
 */
export const InstallAction = /*@__PURE__*/
  tsEnum(InstallActionSchema);

/**
 * Describes the enum fig.Os.
 */
export const OsSchema = /*@__PURE__*/
  enumDesc(file_fig, 4);

/**
 * @generated from enum fig.Os
 */
export const Os = /*@__PURE__*/
  tsEnum(OsSchema);

/**
 * Describes the enum fig.DesktopEnvironment.
 */
export const DesktopEnvironmentSchema = /*@__PURE__*/
  enumDesc(file_fig, 5);

/**
 * @generated from enum fig.DesktopEnvironment
 */
export const DesktopEnvironment = /*@__PURE__*/
  tsEnum(DesktopEnvironmentSchema);

/**
 * Describes the enum fig.DisplayServerProtocol.
 */
export const DisplayServerProtocolSchema = /*@__PURE__*/
  enumDesc(file_fig, 6);

/**
 * @generated from enum fig.DisplayServerProtocol
 */
export const DisplayServerProtocol = /*@__PURE__*/
  tsEnum(DisplayServerProtocolSchema);

/**
 * Describes the enum fig.AppBundleType.
 */
export const AppBundleTypeSchema = /*@__PURE__*/
  enumDesc(file_fig, 7);

/**
 * @generated from enum fig.AppBundleType
 */
export const AppBundleType = /*@__PURE__*/
  tsEnum(AppBundleTypeSchema);

/**
 * Describes the enum fig.FocusAction.
 */
export const FocusActionSchema = /*@__PURE__*/
  enumDesc(file_fig, 8);

/**
 * @generated from enum fig.FocusAction
 */
export const FocusAction = /*@__PURE__*/
  tsEnum(FocusActionSchema);

/**
 * Describes the enum fig.ActionAvailability.
 */
export const ActionAvailabilitySchema = /*@__PURE__*/
  enumDesc(file_fig, 9);

/**
 * @generated from enum fig.ActionAvailability
 */
export const ActionAvailability = /*@__PURE__*/
  tsEnum(ActionAvailabilitySchema);

/**
 * Describes the enum fig.InputMethodAction.
 */
export const InputMethodActionSchema = /*@__PURE__*/
  enumDesc(file_fig, 10);

/**
 * @generated from enum fig.InputMethodAction
 */
export const InputMethodAction = /*@__PURE__*/
  tsEnum(InputMethodActionSchema);

/**
 * Describes the enum fig.InputMethodState.
 */
export const InputMethodStateSchema = /*@__PURE__*/
  enumDesc(file_fig, 11);

/**
 * @generated from enum fig.InputMethodState
 */
export const InputMethodState = /*@__PURE__*/
  tsEnum(InputMethodStateSchema);

/**
 * Describes the enum fig.NotificationType.
 */
export const NotificationTypeSchema = /*@__PURE__*/
  enumDesc(file_fig, 12);

/**
 * @generated from enum fig.NotificationType
 */
export const NotificationType = /*@__PURE__*/
  tsEnum(NotificationTypeSchema);

