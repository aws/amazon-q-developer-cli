// @generated by protoc-gen-es v2.2.5 with parameter "target=js+dts,import_extension=js,json_types=false"
// @generated from file remote.proto (package remote, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, Empty, EnvironmentVariable, FileData } from "./fig_common_pb.js";
import type { DiagnosticsRequest, DiagnosticsResponse, InsertOnNewCmdRequest, InsertTextRequest, InterceptRequest, SetBufferRequest } from "./figterm_pb.js";
import type { ReadFileRequest, RunProcessResponse } from "./fig_pb.js";
import type { EditBufferHook, InterceptedKeyHook, PostExecHook, PreExecHook, PromptHook } from "./local_pb.js";

/**
 * Describes the file remote.proto.
 */
export declare const file_remote: GenFile;

/**
 * @generated from message remote.RunProcessRequest
 */
export declare type RunProcessRequest = Message<"remote.RunProcessRequest"> & {
  /**
   * @generated from field: string executable = 1;
   */
  executable: string;

  /**
   * @generated from field: repeated string arguments = 2;
   */
  arguments: string[];

  /**
   * @generated from field: optional string working_directory = 3;
   */
  workingDirectory?: string;

  /**
   * @generated from field: repeated fig_common.EnvironmentVariable env = 4;
   */
  env: EnvironmentVariable[];

  /**
   * @generated from field: optional fig_common.Duration timeout = 5;
   */
  timeout?: Duration;
};

/**
 * Describes the message remote.RunProcessRequest.
 * Use `create(RunProcessRequestSchema)` to create a new message.
 */
export declare const RunProcessRequestSchema: GenMessage<RunProcessRequest>;

/**
 * @generated from message remote.Clientbound
 */
export declare type Clientbound = Message<"remote.Clientbound"> & {
  /**
   * @generated from oneof remote.Clientbound.packet
   */
  packet: {
    /**
     * @generated from field: remote.Clientbound.HandshakeResponse handshake_response = 100;
     */
    value: Clientbound_HandshakeResponse;
    case: "handshakeResponse";
  } | {
    /**
     * @generated from field: fig_common.Empty ping = 101;
     */
    value: Empty;
    case: "ping";
  } | {
    /**
     * @generated from field: remote.Clientbound.Request request = 102;
     */
    value: Clientbound_Request;
    case: "request";
  } | {
    /**
     * @generated from field: remote.Clientbound.Response response = 103;
     */
    value: Clientbound_Response;
    case: "response";
  } | {
    /**
     * @generated from field: remote.Clientbound.NotifyChildSessionStarted notify_child_session_started = 104;
     */
    value: Clientbound_NotifyChildSessionStarted;
    case: "notifyChildSessionStarted";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message remote.Clientbound.
 * Use `create(ClientboundSchema)` to create a new message.
 */
export declare const ClientboundSchema: GenMessage<Clientbound>;

/**
 * @generated from message remote.Clientbound.HandshakeResponse
 */
export declare type Clientbound_HandshakeResponse = Message<"remote.Clientbound.HandshakeResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message remote.Clientbound.HandshakeResponse.
 * Use `create(Clientbound_HandshakeResponseSchema)` to create a new message.
 */
export declare const Clientbound_HandshakeResponseSchema: GenMessage<Clientbound_HandshakeResponse>;

/**
 * @generated from message remote.Clientbound.NotifyChildSessionStarted
 */
export declare type Clientbound_NotifyChildSessionStarted = Message<"remote.Clientbound.NotifyChildSessionStarted"> & {
  /**
   * @generated from field: string parent_id = 1;
   */
  parentId: string;
};

/**
 * Describes the message remote.Clientbound.NotifyChildSessionStarted.
 * Use `create(Clientbound_NotifyChildSessionStartedSchema)` to create a new message.
 */
export declare const Clientbound_NotifyChildSessionStartedSchema: GenMessage<Clientbound_NotifyChildSessionStarted>;

/**
 * @generated from message remote.Clientbound.Request
 */
export declare type Clientbound_Request = Message<"remote.Clientbound.Request"> & {
  /**
   * @generated from field: optional uint64 nonce = 1;
   */
  nonce?: bigint;

  /**
   * @generated from oneof remote.Clientbound.Request.request
   */
  request: {
    /**
     * @generated from field: figterm.InterceptRequest intercept = 100;
     */
    value: InterceptRequest;
    case: "intercept";
  } | {
    /**
     * @generated from field: figterm.InsertTextRequest insert_text = 101;
     */
    value: InsertTextRequest;
    case: "insertText";
  } | {
    /**
     * @generated from field: figterm.SetBufferRequest set_buffer = 102;
     */
    value: SetBufferRequest;
    case: "setBuffer";
  } | {
    /**
     * @generated from field: figterm.DiagnosticsRequest diagnostics = 103;
     */
    value: DiagnosticsRequest;
    case: "diagnostics";
  } | {
    /**
     * @generated from field: figterm.InsertOnNewCmdRequest insert_on_new_cmd = 107;
     */
    value: InsertOnNewCmdRequest;
    case: "insertOnNewCmd";
  } | {
    /**
     * @generated from field: fig.ReadFileRequest read_file = 105;
     */
    value: ReadFileRequest;
    case: "readFile";
  } | {
    /**
     * @generated from field: remote.RunProcessRequest run_process = 104;
     */
    value: RunProcessRequest;
    case: "runProcess";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message remote.Clientbound.Request.
 * Use `create(Clientbound_RequestSchema)` to create a new message.
 */
export declare const Clientbound_RequestSchema: GenMessage<Clientbound_Request>;

/**
 * @generated from message remote.Clientbound.Response
 */
export declare type Clientbound_Response = Message<"remote.Clientbound.Response"> & {
  /**
   * @generated from field: optional uint64 nonce = 1;
   */
  nonce?: bigint;

  /**
   * @generated from oneof remote.Clientbound.Response.response
   */
  response: {
    /**
     * Empty message to ensure response is valid, oneof can't be empty
     *
     * @generated from field: fig_common.Empty empty = 103;
     */
    value: Empty;
    case: "empty";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message remote.Clientbound.Response.
 * Use `create(Clientbound_ResponseSchema)` to create a new message.
 */
export declare const Clientbound_ResponseSchema: GenMessage<Clientbound_Response>;

/**
 * @generated from message remote.Hostbound
 */
export declare type Hostbound = Message<"remote.Hostbound"> & {
  /**
   * @generated from oneof remote.Hostbound.packet
   */
  packet: {
    /**
     * @generated from field: remote.Hostbound.Handshake handshake = 100;
     */
    value: Hostbound_Handshake;
    case: "handshake";
  } | {
    /**
     * @generated from field: remote.Hostbound.Request request = 101;
     */
    value: Hostbound_Request;
    case: "request";
  } | {
    /**
     * @generated from field: remote.Hostbound.Response response = 102;
     */
    value: Hostbound_Response;
    case: "response";
  } | {
    /**
     * @generated from field: fig_common.Empty pong = 103;
     */
    value: Empty;
    case: "pong";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message remote.Hostbound.
 * Use `create(HostboundSchema)` to create a new message.
 */
export declare const HostboundSchema: GenMessage<Hostbound>;

/**
 * @generated from message remote.Hostbound.Handshake
 */
export declare type Hostbound_Handshake = Message<"remote.Hostbound.Handshake"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string secret = 2;
   */
  secret: string;

  /**
   * @generated from field: optional string parent_id = 3;
   */
  parentId?: string;
};

/**
 * Describes the message remote.Hostbound.Handshake.
 * Use `create(Hostbound_HandshakeSchema)` to create a new message.
 */
export declare const Hostbound_HandshakeSchema: GenMessage<Hostbound_Handshake>;

/**
 * @generated from message remote.Hostbound.Request
 */
export declare type Hostbound_Request = Message<"remote.Hostbound.Request"> & {
  /**
   * @generated from field: optional uint64 nonce = 1;
   */
  nonce?: bigint;

  /**
   * @generated from oneof remote.Hostbound.Request.request
   */
  request: {
    /**
     * @generated from field: local.EditBufferHook edit_buffer = 101;
     */
    value: EditBufferHook;
    case: "editBuffer";
  } | {
    /**
     * @generated from field: local.PromptHook prompt = 102;
     */
    value: PromptHook;
    case: "prompt";
  } | {
    /**
     * @generated from field: local.PreExecHook pre_exec = 103;
     */
    value: PreExecHook;
    case: "preExec";
  } | {
    /**
     * @generated from field: local.PostExecHook post_exec = 108;
     */
    value: PostExecHook;
    case: "postExec";
  } | {
    /**
     * @generated from field: local.InterceptedKeyHook intercepted_key = 104;
     */
    value: InterceptedKeyHook;
    case: "interceptedKey";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message remote.Hostbound.Request.
 * Use `create(Hostbound_RequestSchema)` to create a new message.
 */
export declare const Hostbound_RequestSchema: GenMessage<Hostbound_Request>;

/**
 * @generated from message remote.Hostbound.Response
 */
export declare type Hostbound_Response = Message<"remote.Hostbound.Response"> & {
  /**
   * @generated from field: optional uint64 nonce = 1;
   */
  nonce?: bigint;

  /**
   * @generated from oneof remote.Hostbound.Response.response
   */
  response: {
    /**
     * @generated from field: string error = 100;
     */
    value: string;
    case: "error";
  } | {
    /**
     * @generated from field: figterm.DiagnosticsResponse diagnostics = 101;
     */
    value: DiagnosticsResponse;
    case: "diagnostics";
  } | {
    /**
     * @generated from field: fig.RunProcessResponse run_process = 102;
     */
    value: RunProcessResponse;
    case: "runProcess";
  } | {
    /**
     * @generated from field: remote.Hostbound.Response.ReadFileResponse read_file = 103;
     */
    value: Hostbound_Response_ReadFileResponse;
    case: "readFile";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message remote.Hostbound.Response.
 * Use `create(Hostbound_ResponseSchema)` to create a new message.
 */
export declare const Hostbound_ResponseSchema: GenMessage<Hostbound_Response>;

/**
 * @generated from message remote.Hostbound.Response.ReadFileResponse
 */
export declare type Hostbound_Response_ReadFileResponse = Message<"remote.Hostbound.Response.ReadFileResponse"> & {
  /**
   * @generated from field: fig_common.FileData data = 1;
   */
  data?: FileData;
};

/**
 * Describes the message remote.Hostbound.Response.ReadFileResponse.
 * Use `create(Hostbound_Response_ReadFileResponseSchema)` to create a new message.
 */
export declare const Hostbound_Response_ReadFileResponseSchema: GenMessage<Hostbound_Response_ReadFileResponse>;

