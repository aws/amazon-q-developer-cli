// @generated by protoc-gen-es v2.2.5 with parameter "target=js+dts,import_extension=js,json_types=false"
// @generated from file local.proto (package local, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ShellContext } from "./fig_common_pb.js";

/**
 * Describes the file local.proto.
 */
export declare const file_local: GenFile;

/**
 * @generated from message local.LocalMessage
 */
export declare type LocalMessage = Message<"local.LocalMessage"> & {
  /**
   * @generated from oneof local.LocalMessage.type
   */
  type: {
    /**
     * expect a response from the host app
     *
     * @generated from field: local.Command command = 2;
     */
    value: Command;
    case: "command";
  } | {
    /**
     * one way update only, no response expected
     *
     * @generated from field: local.Hook hook = 3;
     */
    value: Hook;
    case: "hook";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message local.LocalMessage.
 * Use `create(LocalMessageSchema)` to create a new message.
 */
export declare const LocalMessageSchema: GenMessage<LocalMessage>;

/**
 * @generated from message local.Command
 */
export declare type Command = Message<"local.Command"> & {
  /**
   * @generated from field: optional int64 id = 1;
   */
  id?: bigint;

  /**
   * opt-out of response from host app
   *
   * @generated from field: optional bool no_response = 2;
   */
  noResponse?: boolean;

  /**
   * @generated from oneof local.Command.command
   */
  command: {
    /**
     * @generated from field: local.TerminalIntegrationCommand terminal_integration = 100;
     */
    value: TerminalIntegrationCommand;
    case: "terminalIntegration";
  } | {
    /**
     * @generated from field: local.ListTerminalIntegrationsCommand list_terminal_integrations = 101;
     */
    value: ListTerminalIntegrationsCommand;
    case: "listTerminalIntegrations";
  } | {
    /**
     * @generated from field: local.LogoutCommand logout = 102;
     */
    value: LogoutCommand;
    case: "logout";
  } | {
    /**
     * @generated from field: local.RestartCommand restart = 103;
     */
    value: RestartCommand;
    case: "restart";
  } | {
    /**
     * @generated from field: local.QuitCommand quit = 104;
     */
    value: QuitCommand;
    case: "quit";
  } | {
    /**
     * @generated from field: local.UpdateCommand update = 105;
     */
    value: UpdateCommand;
    case: "update";
  } | {
    /**
     * @generated from field: local.DiagnosticsCommand diagnostics = 106;
     */
    value: DiagnosticsCommand;
    case: "diagnostics";
  } | {
    /**
     * @generated from field: local.ReportWindowCommand report_window = 107;
     */
    value: ReportWindowCommand;
    case: "reportWindow";
  } | {
    /**
     * @generated from field: local.RestartSettingsListenerCommand restart_settings_listener = 108;
     */
    value: RestartSettingsListenerCommand;
    case: "restartSettingsListener";
  } | {
    /**
     * @generated from field: local.RunInstallScriptCommand run_install_script = 109;
     */
    value: RunInstallScriptCommand;
    case: "runInstallScript";
  } | {
    /**
     * @generated from field: local.OpenUiElementCommand open_ui_element = 111;
     */
    value: OpenUiElementCommand;
    case: "openUiElement";
  } | {
    /**
     * @generated from field: local.ResetCacheCommand reset_cache = 112;
     */
    value: ResetCacheCommand;
    case: "resetCache";
  } | {
    /**
     * @generated from field: local.DebugModeCommand debug_mode = 113;
     */
    value: DebugModeCommand;
    case: "debugMode";
  } | {
    /**
     * @generated from field: local.PromptAccessibilityCommand prompt_accessibility = 114;
     */
    value: PromptAccessibilityCommand;
    case: "promptAccessibility";
  } | {
    /**
     * @generated from field: local.InputMethodCommand input_method = 115;
     */
    value: InputMethodCommand;
    case: "inputMethod";
  } | {
    /**
     * @generated from field: local.OpenBrowserCommand open_browser = 117;
     */
    value: OpenBrowserCommand;
    case: "openBrowser";
  } | {
    /**
     * A request to set the desktops's log level
     *
     * @generated from field: local.LogLevelCommand log_level = 118;
     */
    value: LogLevelCommand;
    case: "logLevel";
  } | {
    /**
     * @generated from field: local.DumpStateCommand dump_state = 119;
     */
    value: DumpStateCommand;
    case: "dumpState";
  } | {
    /**
     * @generated from field: local.DevtoolsCommand devtools = 120;
     */
    value: DevtoolsCommand;
    case: "devtools";
  } | {
    /**
     * @generated from field: local.LoginCommand login = 121;
     */
    value: LoginCommand;
    case: "login";
  } | {
    /**
     * @generated from field: local.ConnectToIBusCommand connect_to_ibus = 122;
     */
    value: ConnectToIBusCommand;
    case: "connectToIbus";
  } | {
    /**
     * @generated from field: local.BundleMetadataCommand bundle_metadata = 123;
     */
    value: BundleMetadataCommand;
    case: "bundleMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message local.Command.
 * Use `create(CommandSchema)` to create a new message.
 */
export declare const CommandSchema: GenMessage<Command>;

/**
 * @generated from message local.Hook
 */
export declare type Hook = Message<"local.Hook"> & {
  /**
   * @generated from oneof local.Hook.hook
   */
  hook: {
    /**
     * @generated from field: local.EditBufferHook edit_buffer = 100;
     */
    value: EditBufferHook;
    case: "editBuffer";
  } | {
    /**
     * @generated from field: local.InitHook init = 101;
     */
    value: InitHook;
    case: "init";
  } | {
    /**
     * @generated from field: local.PromptHook prompt = 102;
     */
    value: PromptHook;
    case: "prompt";
  } | {
    /**
     * @generated from field: local.PreExecHook pre_exec = 103;
     */
    value: PreExecHook;
    case: "preExec";
  } | {
    /**
     * @generated from field: local.PostExecHook post_exec = 104;
     */
    value: PostExecHook;
    case: "postExec";
  } | {
    /**
     * @generated from field: local.KeyboardFocusChangedHook keyboard_focus_changed = 105;
     */
    value: KeyboardFocusChangedHook;
    case: "keyboardFocusChanged";
  } | {
    /**
     * @generated from field: local.TmuxPaneChangedHook tmux_pane_changed = 106;
     */
    value: TmuxPaneChangedHook;
    case: "tmuxPaneChanged";
  } | {
    /**
     * @generated from field: local.OpenedSSHConnectionHook opened_ssh_connection = 107;
     */
    value: OpenedSSHConnectionHook;
    case: "openedSshConnection";
  } | {
    /**
     * @generated from field: local.CallbackHook callback = 108;
     */
    value: CallbackHook;
    case: "callback";
  } | {
    /**
     * @generated from field: local.IntegrationReadyHook integration_ready = 109;
     */
    value: IntegrationReadyHook;
    case: "integrationReady";
  } | {
    /**
     * @generated from field: local.HideHook hide = 110;
     */
    value: HideHook;
    case: "hide";
  } | {
    /**
     * @generated from field: local.EventHook event = 111;
     */
    value: EventHook;
    case: "event";
  } | {
    /**
     * @generated from field: local.FileChangedHook file_changed = 112;
     */
    value: FileChangedHook;
    case: "fileChanged";
  } | {
    /**
     * @generated from field: local.CaretPositionHook caret_position = 113;
     */
    value: CaretPositionHook;
    case: "caretPosition";
  } | {
    /**
     * @generated from field: local.FocusChangeHook focus_change = 114;
     */
    value: FocusChangeHook;
    case: "focusChange";
  } | {
    /**
     * @generated from field: local.InterceptedKeyHook intercepted_key = 115;
     */
    value: InterceptedKeyHook;
    case: "interceptedKey";
  } | {
    /**
     * @generated from field: local.FocusedWindowDataHook focused_window_data = 116;
     */
    value: FocusedWindowDataHook;
    case: "focusedWindowData";
  } | {
    /**
     * @generated from field: local.ClearAutocompleteCacheHook clear_autocomplete_cache = 117;
     */
    value: ClearAutocompleteCacheHook;
    case: "clearAutocompleteCache";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message local.Hook.
 * Use `create(HookSchema)` to create a new message.
 */
export declare const HookSchema: GenMessage<Hook>;

/**
 * @generated from message local.TerminalIntegrationCommand
 */
export declare type TerminalIntegrationCommand = Message<"local.TerminalIntegrationCommand"> & {
  /**
   * @generated from field: string identifier = 1;
   */
  identifier: string;

  /**
   * @generated from field: local.IntegrationAction action = 2;
   */
  action: IntegrationAction;
};

/**
 * Describes the message local.TerminalIntegrationCommand.
 * Use `create(TerminalIntegrationCommandSchema)` to create a new message.
 */
export declare const TerminalIntegrationCommandSchema: GenMessage<TerminalIntegrationCommand>;

/**
 * @generated from message local.ListTerminalIntegrationsCommand
 */
export declare type ListTerminalIntegrationsCommand = Message<"local.ListTerminalIntegrationsCommand"> & {
};

/**
 * Describes the message local.ListTerminalIntegrationsCommand.
 * Use `create(ListTerminalIntegrationsCommandSchema)` to create a new message.
 */
export declare const ListTerminalIntegrationsCommandSchema: GenMessage<ListTerminalIntegrationsCommand>;

/**
 * @generated from message local.LoginCommand
 */
export declare type LoginCommand = Message<"local.LoginCommand"> & {
};

/**
 * Describes the message local.LoginCommand.
 * Use `create(LoginCommandSchema)` to create a new message.
 */
export declare const LoginCommandSchema: GenMessage<LoginCommand>;

/**
 * @generated from message local.LogoutCommand
 */
export declare type LogoutCommand = Message<"local.LogoutCommand"> & {
};

/**
 * Describes the message local.LogoutCommand.
 * Use `create(LogoutCommandSchema)` to create a new message.
 */
export declare const LogoutCommandSchema: GenMessage<LogoutCommand>;

/**
 * @generated from message local.RestartCommand
 */
export declare type RestartCommand = Message<"local.RestartCommand"> & {
};

/**
 * Describes the message local.RestartCommand.
 * Use `create(RestartCommandSchema)` to create a new message.
 */
export declare const RestartCommandSchema: GenMessage<RestartCommand>;

/**
 * @generated from message local.QuitCommand
 */
export declare type QuitCommand = Message<"local.QuitCommand"> & {
};

/**
 * Describes the message local.QuitCommand.
 * Use `create(QuitCommandSchema)` to create a new message.
 */
export declare const QuitCommandSchema: GenMessage<QuitCommand>;

/**
 * @generated from message local.UninstallCommand
 */
export declare type UninstallCommand = Message<"local.UninstallCommand"> & {
};

/**
 * Describes the message local.UninstallCommand.
 * Use `create(UninstallCommandSchema)` to create a new message.
 */
export declare const UninstallCommandSchema: GenMessage<UninstallCommand>;

/**
 * @generated from message local.UpdateCommand
 */
export declare type UpdateCommand = Message<"local.UpdateCommand"> & {
  /**
   * @generated from field: bool force = 1;
   */
  force: boolean;
};

/**
 * Describes the message local.UpdateCommand.
 * Use `create(UpdateCommandSchema)` to create a new message.
 */
export declare const UpdateCommandSchema: GenMessage<UpdateCommand>;

/**
 * @generated from message local.DiagnosticsCommand
 */
export declare type DiagnosticsCommand = Message<"local.DiagnosticsCommand"> & {
};

/**
 * Describes the message local.DiagnosticsCommand.
 * Use `create(DiagnosticsCommandSchema)` to create a new message.
 */
export declare const DiagnosticsCommandSchema: GenMessage<DiagnosticsCommand>;

/**
 * @generated from message local.ReportWindowCommand
 */
export declare type ReportWindowCommand = Message<"local.ReportWindowCommand"> & {
  /**
   * @generated from field: string report = 1;
   */
  report: string;

  /**
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * @generated from field: string fig_env_var = 3;
   */
  figEnvVar: string;

  /**
   * @generated from field: string terminal = 4;
   */
  terminal: string;
};

/**
 * Describes the message local.ReportWindowCommand.
 * Use `create(ReportWindowCommandSchema)` to create a new message.
 */
export declare const ReportWindowCommandSchema: GenMessage<ReportWindowCommand>;

/**
 * @generated from message local.RestartSettingsListenerCommand
 */
export declare type RestartSettingsListenerCommand = Message<"local.RestartSettingsListenerCommand"> & {
};

/**
 * Describes the message local.RestartSettingsListenerCommand.
 * Use `create(RestartSettingsListenerCommandSchema)` to create a new message.
 */
export declare const RestartSettingsListenerCommandSchema: GenMessage<RestartSettingsListenerCommand>;

/**
 * @generated from message local.RunInstallScriptCommand
 */
export declare type RunInstallScriptCommand = Message<"local.RunInstallScriptCommand"> & {
};

/**
 * Describes the message local.RunInstallScriptCommand.
 * Use `create(RunInstallScriptCommandSchema)` to create a new message.
 */
export declare const RunInstallScriptCommandSchema: GenMessage<RunInstallScriptCommand>;

/**
 * @generated from message local.OpenUiElementCommand
 */
export declare type OpenUiElementCommand = Message<"local.OpenUiElementCommand"> & {
  /**
   * @generated from field: local.UiElement element = 1;
   */
  element: UiElement;

  /**
   * @generated from field: optional string route = 2;
   */
  route?: string;
};

/**
 * Describes the message local.OpenUiElementCommand.
 * Use `create(OpenUiElementCommandSchema)` to create a new message.
 */
export declare const OpenUiElementCommandSchema: GenMessage<OpenUiElementCommand>;

/**
 * @generated from message local.ResetCacheCommand
 */
export declare type ResetCacheCommand = Message<"local.ResetCacheCommand"> & {
};

/**
 * Describes the message local.ResetCacheCommand.
 * Use `create(ResetCacheCommandSchema)` to create a new message.
 */
export declare const ResetCacheCommandSchema: GenMessage<ResetCacheCommand>;

/**
 * @generated from message local.DebugModeCommand
 */
export declare type DebugModeCommand = Message<"local.DebugModeCommand"> & {
  /**
   * Set debug mode to true or false
   *
   * @generated from field: optional bool set_debug_mode = 1;
   */
  setDebugMode?: boolean;

  /**
   * Toggle debug mode
   *
   * @generated from field: optional bool toggle_debug_mode = 2;
   */
  toggleDebugMode?: boolean;
};

/**
 * Describes the message local.DebugModeCommand.
 * Use `create(DebugModeCommandSchema)` to create a new message.
 */
export declare const DebugModeCommandSchema: GenMessage<DebugModeCommand>;

/**
 * @generated from message local.InputMethodCommand
 */
export declare type InputMethodCommand = Message<"local.InputMethodCommand"> & {
  /**
   * @generated from field: optional local.InputMethodAction actions = 1;
   */
  actions?: InputMethodAction;
};

/**
 * Describes the message local.InputMethodCommand.
 * Use `create(InputMethodCommandSchema)` to create a new message.
 */
export declare const InputMethodCommandSchema: GenMessage<InputMethodCommand>;

/**
 * @generated from message local.PromptAccessibilityCommand
 */
export declare type PromptAccessibilityCommand = Message<"local.PromptAccessibilityCommand"> & {
};

/**
 * Describes the message local.PromptAccessibilityCommand.
 * Use `create(PromptAccessibilityCommandSchema)` to create a new message.
 */
export declare const PromptAccessibilityCommandSchema: GenMessage<PromptAccessibilityCommand>;

/**
 * @generated from message local.OpenBrowserCommand
 */
export declare type OpenBrowserCommand = Message<"local.OpenBrowserCommand"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message local.OpenBrowserCommand.
 * Use `create(OpenBrowserCommandSchema)` to create a new message.
 */
export declare const OpenBrowserCommandSchema: GenMessage<OpenBrowserCommand>;

/**
 * @generated from message local.LogLevelCommand
 */
export declare type LogLevelCommand = Message<"local.LogLevelCommand"> & {
  /**
   * @generated from field: string level = 1;
   */
  level: string;
};

/**
 * Describes the message local.LogLevelCommand.
 * Use `create(LogLevelCommandSchema)` to create a new message.
 */
export declare const LogLevelCommandSchema: GenMessage<LogLevelCommand>;

/**
 * @generated from message local.DumpStateCommand
 */
export declare type DumpStateCommand = Message<"local.DumpStateCommand"> & {
  /**
   * @generated from field: local.DumpStateCommand.Type type = 1;
   */
  type: DumpStateCommand_Type;
};

/**
 * Describes the message local.DumpStateCommand.
 * Use `create(DumpStateCommandSchema)` to create a new message.
 */
export declare const DumpStateCommandSchema: GenMessage<DumpStateCommand>;

/**
 * @generated from enum local.DumpStateCommand.Type
 */
export enum DumpStateCommand_Type {
  /**
   * @generated from enum value: TYPE_DUMP_STATE_FIGTERM = 0;
   */
  DUMP_STATE_FIGTERM = 0,

  /**
   * @generated from enum value: TYPE_DUMP_STATE_WEB_NOTIFICATIONS = 1;
   */
  DUMP_STATE_WEB_NOTIFICATIONS = 1,

  /**
   * @generated from enum value: TYPE_DUMP_STATE_PLATFORM = 2;
   */
  DUMP_STATE_PLATFORM = 2,
}

/**
 * Describes the enum local.DumpStateCommand.Type.
 */
export declare const DumpStateCommand_TypeSchema: GenEnum<DumpStateCommand_Type>;

/**
 * @generated from message local.DevtoolsCommand
 */
export declare type DevtoolsCommand = Message<"local.DevtoolsCommand"> & {
  /**
   * @generated from field: local.DevtoolsCommand.Window window = 1;
   */
  window: DevtoolsCommand_Window;
};

/**
 * Describes the message local.DevtoolsCommand.
 * Use `create(DevtoolsCommandSchema)` to create a new message.
 */
export declare const DevtoolsCommandSchema: GenMessage<DevtoolsCommand>;

/**
 * @generated from enum local.DevtoolsCommand.Window
 */
export enum DevtoolsCommand_Window {
  /**
   * @generated from enum value: WINDOW_DEVTOOLS_AUTOCOMPLETE = 0;
   */
  DEVTOOLS_AUTOCOMPLETE = 0,

  /**
   * @generated from enum value: WINDOW_DEVTOOLS_DASHBOARD = 1;
   */
  DEVTOOLS_DASHBOARD = 1,
}

/**
 * Describes the enum local.DevtoolsCommand.Window.
 */
export declare const DevtoolsCommand_WindowSchema: GenEnum<DevtoolsCommand_Window>;

/**
 * @generated from message local.ConnectToIBusCommand
 */
export declare type ConnectToIBusCommand = Message<"local.ConnectToIBusCommand"> & {
};

/**
 * Describes the message local.ConnectToIBusCommand.
 * Use `create(ConnectToIBusCommandSchema)` to create a new message.
 */
export declare const ConnectToIBusCommandSchema: GenMessage<ConnectToIBusCommand>;

/**
 * @generated from message local.BundleMetadataCommand
 */
export declare type BundleMetadataCommand = Message<"local.BundleMetadataCommand"> & {
};

/**
 * Describes the message local.BundleMetadataCommand.
 * Use `create(BundleMetadataCommandSchema)` to create a new message.
 */
export declare const BundleMetadataCommandSchema: GenMessage<BundleMetadataCommand>;

/**
 * @generated from message local.TerminalCursorCoordinates
 */
export declare type TerminalCursorCoordinates = Message<"local.TerminalCursorCoordinates"> & {
  /**
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * @generated from field: int32 y = 2;
   */
  y: number;

  /**
   * @generated from field: int32 xpixel = 3;
   */
  xpixel: number;

  /**
   * @generated from field: int32 ypixel = 4;
   */
  ypixel: number;
};

/**
 * Describes the message local.TerminalCursorCoordinates.
 * Use `create(TerminalCursorCoordinatesSchema)` to create a new message.
 */
export declare const TerminalCursorCoordinatesSchema: GenMessage<TerminalCursorCoordinates>;

/**
 * @generated from message local.EditBufferHook
 */
export declare type EditBufferHook = Message<"local.EditBufferHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;

  /**
   * @generated from field: string text = 2;
   */
  text: string;

  /**
   * @generated from field: int64 cursor = 3;
   */
  cursor: bigint;

  /**
   * @generated from field: int64 histno = 4;
   */
  histno: bigint;

  /**
   * @generated from field: optional local.TerminalCursorCoordinates terminal_cursor_coordinates = 5;
   */
  terminalCursorCoordinates?: TerminalCursorCoordinates;
};

/**
 * Describes the message local.EditBufferHook.
 * Use `create(EditBufferHookSchema)` to create a new message.
 */
export declare const EditBufferHookSchema: GenMessage<EditBufferHook>;

/**
 * @generated from message local.InitHook
 */
export declare type InitHook = Message<"local.InitHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;

  /**
   * @generated from field: bool called_direct = 2;
   */
  calledDirect: boolean;

  /**
   * @generated from field: string bundle = 3;
   */
  bundle: string;

  /**
   * @generated from field: map<string, string> env = 100;
   */
  env: { [key: string]: string };
};

/**
 * Describes the message local.InitHook.
 * Use `create(InitHookSchema)` to create a new message.
 */
export declare const InitHookSchema: GenMessage<InitHook>;

/**
 * @generated from message local.PromptHook
 */
export declare type PromptHook = Message<"local.PromptHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;
};

/**
 * Describes the message local.PromptHook.
 * Use `create(PromptHookSchema)` to create a new message.
 */
export declare const PromptHookSchema: GenMessage<PromptHook>;

/**
 * @generated from message local.PreExecHook
 */
export declare type PreExecHook = Message<"local.PreExecHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;

  /**
   * the full command that was run in the shell
   *
   * @generated from field: optional string command = 2;
   */
  command?: string;
};

/**
 * Describes the message local.PreExecHook.
 * Use `create(PreExecHookSchema)` to create a new message.
 */
export declare const PreExecHookSchema: GenMessage<PreExecHook>;

/**
 * @generated from message local.PostExecHook
 */
export declare type PostExecHook = Message<"local.PostExecHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;

  /**
   * the full command that was run in the shell
   *
   * @generated from field: optional string command = 2;
   */
  command?: string;

  /**
   * the exit code of the command
   *
   * @generated from field: optional int32 exit_code = 3;
   */
  exitCode?: number;
};

/**
 * Describes the message local.PostExecHook.
 * Use `create(PostExecHookSchema)` to create a new message.
 */
export declare const PostExecHookSchema: GenMessage<PostExecHook>;

/**
 * @generated from message local.KeyboardFocusChangedHook
 */
export declare type KeyboardFocusChangedHook = Message<"local.KeyboardFocusChangedHook"> & {
  /**
   * @generated from field: string app_identifier = 1;
   */
  appIdentifier: string;

  /**
   * a unique identifier associated with the pane
   *
   * @generated from field: string focused_session_id = 2;
   */
  focusedSessionId: string;
};

/**
 * Describes the message local.KeyboardFocusChangedHook.
 * Use `create(KeyboardFocusChangedHookSchema)` to create a new message.
 */
export declare const KeyboardFocusChangedHookSchema: GenMessage<KeyboardFocusChangedHook>;

/**
 * @generated from message local.TmuxPaneChangedHook
 */
export declare type TmuxPaneChangedHook = Message<"local.TmuxPaneChangedHook"> & {
  /**
   * @generated from field: int32 pane_identifier = 1;
   */
  paneIdentifier: number;
};

/**
 * Describes the message local.TmuxPaneChangedHook.
 * Use `create(TmuxPaneChangedHookSchema)` to create a new message.
 */
export declare const TmuxPaneChangedHookSchema: GenMessage<TmuxPaneChangedHook>;

/**
 * @generated from message local.OpenedSSHConnectionHook
 */
export declare type OpenedSSHConnectionHook = Message<"local.OpenedSSHConnectionHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;

  /**
   * @generated from field: string control_path = 2;
   */
  controlPath: string;

  /**
   * @generated from field: string remote_hostname = 3;
   */
  remoteHostname: string;
};

/**
 * Describes the message local.OpenedSSHConnectionHook.
 * Use `create(OpenedSSHConnectionHookSchema)` to create a new message.
 */
export declare const OpenedSSHConnectionHookSchema: GenMessage<OpenedSSHConnectionHook>;

/**
 * @generated from message local.CallbackHook
 */
export declare type CallbackHook = Message<"local.CallbackHook"> & {
  /**
   * @generated from field: string handler_id = 1;
   */
  handlerId: string;

  /**
   * @generated from field: string filepath = 2;
   */
  filepath: string;

  /**
   * @generated from field: string exit_code = 3;
   */
  exitCode: string;
};

/**
 * Describes the message local.CallbackHook.
 * Use `create(CallbackHookSchema)` to create a new message.
 */
export declare const CallbackHookSchema: GenMessage<CallbackHook>;

/**
 * @generated from message local.IntegrationReadyHook
 */
export declare type IntegrationReadyHook = Message<"local.IntegrationReadyHook"> & {
  /**
   * @generated from field: string identifier = 1;
   */
  identifier: string;
};

/**
 * Describes the message local.IntegrationReadyHook.
 * Use `create(IntegrationReadyHookSchema)` to create a new message.
 */
export declare const IntegrationReadyHookSchema: GenMessage<IntegrationReadyHook>;

/**
 * @generated from message local.HideHook
 */
export declare type HideHook = Message<"local.HideHook"> & {
};

/**
 * Describes the message local.HideHook.
 * Use `create(HideHookSchema)` to create a new message.
 */
export declare const HideHookSchema: GenMessage<HideHook>;

/**
 * @generated from message local.EventHook
 */
export declare type EventHook = Message<"local.EventHook"> & {
  /**
   * @generated from field: string event_name = 1;
   */
  eventName: string;

  /**
   * @generated from field: optional string payload = 2;
   */
  payload?: string;

  /**
   * @generated from field: repeated string apps = 3;
   */
  apps: string[];
};

/**
 * Describes the message local.EventHook.
 * Use `create(EventHookSchema)` to create a new message.
 */
export declare const EventHookSchema: GenMessage<EventHook>;

/**
 * @generated from message local.FileChangedHook
 */
export declare type FileChangedHook = Message<"local.FileChangedHook"> & {
  /**
   * @generated from field: local.FileChangedHook.FileChanged file_changed = 1;
   */
  fileChanged: FileChangedHook_FileChanged;

  /**
   * @generated from field: optional string filepath = 2;
   */
  filepath?: string;
};

/**
 * Describes the message local.FileChangedHook.
 * Use `create(FileChangedHookSchema)` to create a new message.
 */
export declare const FileChangedHookSchema: GenMessage<FileChangedHook>;

/**
 * @generated from enum local.FileChangedHook.FileChanged
 */
export enum FileChangedHook_FileChanged {
  /**
   * @generated from enum value: FILE_CHANGED_SETTINGS = 0;
   */
  SETTINGS = 0,

  /**
   * @generated from enum value: FILE_CHANGED_STATE = 1;
   */
  STATE = 1,
}

/**
 * Describes the enum local.FileChangedHook.FileChanged.
 */
export declare const FileChangedHook_FileChangedSchema: GenEnum<FileChangedHook_FileChanged>;

/**
 * @generated from message local.CaretPositionHook
 */
export declare type CaretPositionHook = Message<"local.CaretPositionHook"> & {
  /**
   * TODO(grant): support physical size
   *
   * @generated from field: double x = 1;
   */
  x: number;

  /**
   * @generated from field: double y = 2;
   */
  y: number;

  /**
   * @generated from field: double width = 3;
   */
  width: number;

  /**
   * @generated from field: double height = 4;
   */
  height: number;

  /**
   * @generated from field: optional local.CaretPositionHook.Origin origin = 5;
   */
  origin?: CaretPositionHook_Origin;
};

/**
 * Describes the message local.CaretPositionHook.
 * Use `create(CaretPositionHookSchema)` to create a new message.
 */
export declare const CaretPositionHookSchema: GenMessage<CaretPositionHook>;

/**
 * @generated from enum local.CaretPositionHook.Origin
 */
export enum CaretPositionHook_Origin {
  /**
   * @generated from enum value: ORIGIN_TOP_LEFT = 0;
   */
  TOP_LEFT = 0,

  /**
   * @generated from enum value: ORIGIN_BOTTOM_LEFT = 1;
   */
  BOTTOM_LEFT = 1,
}

/**
 * Describes the enum local.CaretPositionHook.Origin.
 */
export declare const CaretPositionHook_OriginSchema: GenEnum<CaretPositionHook_Origin>;

/**
 * @generated from message local.FocusChangeHook
 */
export declare type FocusChangeHook = Message<"local.FocusChangeHook"> & {
};

/**
 * Describes the message local.FocusChangeHook.
 * Use `create(FocusChangeHookSchema)` to create a new message.
 */
export declare const FocusChangeHookSchema: GenMessage<FocusChangeHook>;

/**
 * @generated from message local.InterceptedKeyHook
 */
export declare type InterceptedKeyHook = Message<"local.InterceptedKeyHook"> & {
  /**
   * @generated from field: fig_common.ShellContext context = 1;
   */
  context?: ShellContext;

  /**
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * @generated from field: string action = 3;
   */
  action: string;
};

/**
 * Describes the message local.InterceptedKeyHook.
 * Use `create(InterceptedKeyHookSchema)` to create a new message.
 */
export declare const InterceptedKeyHookSchema: GenMessage<InterceptedKeyHook>;

/**
 * @generated from message local.BoundingBox
 */
export declare type BoundingBox = Message<"local.BoundingBox"> & {
  /**
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * @generated from field: int32 y = 2;
   */
  y: number;

  /**
   * @generated from field: int32 width = 3;
   */
  width: number;

  /**
   * @generated from field: int32 height = 4;
   */
  height: number;
};

/**
 * Describes the message local.BoundingBox.
 * Use `create(BoundingBoxSchema)` to create a new message.
 */
export declare const BoundingBoxSchema: GenMessage<BoundingBox>;

/**
 * @generated from message local.FocusedWindowDataHook
 */
export declare type FocusedWindowDataHook = Message<"local.FocusedWindowDataHook"> & {
  /**
   * @generated from field: string source = 1;
   */
  source: string;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: local.BoundingBox inner = 3;
   */
  inner?: BoundingBox;

  /**
   * @generated from field: local.BoundingBox outer = 4;
   */
  outer?: BoundingBox;

  /**
   * @generated from field: optional bool hide = 5;
   */
  hide?: boolean;

  /**
   * @generated from field: float scale = 6;
   */
  scale: number;
};

/**
 * Describes the message local.FocusedWindowDataHook.
 * Use `create(FocusedWindowDataHookSchema)` to create a new message.
 */
export declare const FocusedWindowDataHookSchema: GenMessage<FocusedWindowDataHook>;

/**
 * @generated from message local.ClearAutocompleteCacheHook
 */
export declare type ClearAutocompleteCacheHook = Message<"local.ClearAutocompleteCacheHook"> & {
  /**
   * @generated from field: repeated string clis = 1;
   */
  clis: string[];
};

/**
 * Describes the message local.ClearAutocompleteCacheHook.
 * Use `create(ClearAutocompleteCacheHookSchema)` to create a new message.
 */
export declare const ClearAutocompleteCacheHookSchema: GenMessage<ClearAutocompleteCacheHook>;

/**
 * == Responses ==
 *
 * @generated from message local.ErrorResponse
 */
export declare type ErrorResponse = Message<"local.ErrorResponse"> & {
  /**
   * @generated from field: optional int32 exit_code = 1;
   */
  exitCode?: number;

  /**
   * @generated from field: optional string message = 2;
   */
  message?: string;
};

/**
 * Describes the message local.ErrorResponse.
 * Use `create(ErrorResponseSchema)` to create a new message.
 */
export declare const ErrorResponseSchema: GenMessage<ErrorResponse>;

/**
 * @generated from message local.SuccessResponse
 */
export declare type SuccessResponse = Message<"local.SuccessResponse"> & {
  /**
   * @generated from field: optional string message = 1;
   */
  message?: string;
};

/**
 * Describes the message local.SuccessResponse.
 * Use `create(SuccessResponseSchema)` to create a new message.
 */
export declare const SuccessResponseSchema: GenMessage<SuccessResponse>;

/**
 * @generated from message local.TerminalIntegration
 */
export declare type TerminalIntegration = Message<"local.TerminalIntegration"> & {
  /**
   * @generated from field: string bundle_identifier = 1;
   */
  bundleIdentifier: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string status = 3;
   */
  status?: string;
};

/**
 * Describes the message local.TerminalIntegration.
 * Use `create(TerminalIntegrationSchema)` to create a new message.
 */
export declare const TerminalIntegrationSchema: GenMessage<TerminalIntegration>;

/**
 * @generated from message local.TerminalIntegrationsListResponse
 */
export declare type TerminalIntegrationsListResponse = Message<"local.TerminalIntegrationsListResponse"> & {
  /**
   * @generated from field: repeated local.TerminalIntegration integrations = 1;
   */
  integrations: TerminalIntegration[];
};

/**
 * Describes the message local.TerminalIntegrationsListResponse.
 * Use `create(TerminalIntegrationsListResponseSchema)` to create a new message.
 */
export declare const TerminalIntegrationsListResponseSchema: GenMessage<TerminalIntegrationsListResponse>;

/**
 * @generated from message local.DiagnosticsResponse
 */
export declare type DiagnosticsResponse = Message<"local.DiagnosticsResponse"> & {
  /**
   * @generated from field: string distribution = 1;
   */
  distribution: string;

  /**
   * @generated from field: bool beta = 2;
   */
  beta: boolean;

  /**
   * @generated from field: bool debug_autocomplete = 3;
   */
  debugAutocomplete: boolean;

  /**
   * @generated from field: bool developer_mode_enabled = 4;
   */
  developerModeEnabled: boolean;

  /**
   * @generated from field: string current_layout_name = 5;
   */
  currentLayoutName: string;

  /**
   * @generated from field: bool is_running_on_read_only_volume = 6;
   */
  isRunningOnReadOnlyVolume: boolean;

  /**
   * @generated from field: string path_to_bundle = 7;
   */
  pathToBundle: string;

  /**
   * @generated from field: string accessibility = 8;
   */
  accessibility: string;

  /**
   * @generated from field: string keypath = 9;
   */
  keypath: string;

  /**
   * @generated from field: string docker = 10;
   */
  docker: string;

  /**
   * @generated from field: string symlinked = 11;
   */
  symlinked: string;

  /**
   * @generated from field: string onlytab = 12;
   */
  onlytab: string;

  /**
   * @generated from field: string installscript = 13;
   */
  installscript: string;

  /**
   * @generated from field: string pseudoterminal_path = 14;
   */
  pseudoterminalPath: string;

  /**
   * @generated from field: string securekeyboard = 15;
   */
  securekeyboard: string;

  /**
   * @generated from field: string securekeyboard_path = 16;
   */
  securekeyboardPath: string;

  /**
   * @generated from field: string current_process = 17;
   */
  currentProcess: string;

  /**
   * @generated from field: string current_window_identifier = 18;
   */
  currentWindowIdentifier: string;

  /**
   * @generated from field: bool autocomplete = 19;
   */
  autocomplete: boolean;

  /**
   * @generated from field: bool unix_socket_server_exists = 20;
   */
  unixSocketServerExists: boolean;

  /**
   * @generated from field: string current_session = 21;
   */
  currentSession: string;

  /**
   * @generated from field: optional bool autocomplete_active = 22;
   */
  autocompleteActive?: boolean;

  /**
   * The best guess attempt at most recent terminal session data
   *
   * @generated from field: optional string edit_buffer_string = 23;
   */
  editBufferString?: string;

  /**
   * @generated from field: optional int64 edit_buffer_cursor = 24;
   */
  editBufferCursor?: bigint;

  /**
   * @generated from field: optional fig_common.ShellContext shell_context = 25;
   */
  shellContext?: ShellContext;

  /**
   * @generated from field: optional bool intercept_enabled = 26;
   */
  interceptEnabled?: boolean;

  /**
   * @generated from field: optional bool intercept_global_enabled = 27;
   */
  interceptGlobalEnabled?: boolean;
};

/**
 * Describes the message local.DiagnosticsResponse.
 * Use `create(DiagnosticsResponseSchema)` to create a new message.
 */
export declare const DiagnosticsResponseSchema: GenMessage<DiagnosticsResponse>;

/**
 * @generated from message local.LogLevelResponse
 */
export declare type LogLevelResponse = Message<"local.LogLevelResponse"> & {
  /**
   * @generated from field: optional string old_level = 1;
   */
  oldLevel?: string;
};

/**
 * Describes the message local.LogLevelResponse.
 * Use `create(LogLevelResponseSchema)` to create a new message.
 */
export declare const LogLevelResponseSchema: GenMessage<LogLevelResponse>;

/**
 * @generated from message local.DumpStateResponse
 */
export declare type DumpStateResponse = Message<"local.DumpStateResponse"> & {
  /**
   * @generated from field: string json = 1;
   */
  json: string;
};

/**
 * Describes the message local.DumpStateResponse.
 * Use `create(DumpStateResponseSchema)` to create a new message.
 */
export declare const DumpStateResponseSchema: GenMessage<DumpStateResponse>;

/**
 * @generated from message local.BundleMetadataResponse
 */
export declare type BundleMetadataResponse = Message<"local.BundleMetadataResponse"> & {
  /**
   * @generated from field: optional string json = 1;
   */
  json?: string;
};

/**
 * Describes the message local.BundleMetadataResponse.
 * Use `create(BundleMetadataResponseSchema)` to create a new message.
 */
export declare const BundleMetadataResponseSchema: GenMessage<BundleMetadataResponse>;

/**
 * @generated from message local.CommandResponse
 */
export declare type CommandResponse = Message<"local.CommandResponse"> & {
  /**
   * @generated from field: optional int64 id = 1;
   */
  id?: bigint;

  /**
   * @generated from oneof local.CommandResponse.response
   */
  response: {
    /**
     * @generated from field: local.ErrorResponse error = 2;
     */
    value: ErrorResponse;
    case: "error";
  } | {
    /**
     * @generated from field: local.SuccessResponse success = 3;
     */
    value: SuccessResponse;
    case: "success";
  } | {
    /**
     * ... add structured responses for specific commands, as necessary
     *
     * @generated from field: local.TerminalIntegrationsListResponse integration_list = 100;
     */
    value: TerminalIntegrationsListResponse;
    case: "integrationList";
  } | {
    /**
     * @generated from field: local.DiagnosticsResponse diagnostics = 101;
     */
    value: DiagnosticsResponse;
    case: "diagnostics";
  } | {
    /**
     * A response to a log level command
     *
     * @generated from field: local.LogLevelResponse log_level = 102;
     */
    value: LogLevelResponse;
    case: "logLevel";
  } | {
    /**
     * @generated from field: local.DumpStateResponse dump_state = 103;
     */
    value: DumpStateResponse;
    case: "dumpState";
  } | {
    /**
     * @generated from field: local.BundleMetadataResponse bundle_metadata = 104;
     */
    value: BundleMetadataResponse;
    case: "bundleMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message local.CommandResponse.
 * Use `create(CommandResponseSchema)` to create a new message.
 */
export declare const CommandResponseSchema: GenMessage<CommandResponse>;

/**
 * == Commands ==
 *
 * @generated from enum local.IntegrationAction
 */
export enum IntegrationAction {
  /**
   * @generated from enum value: INTEGRATION_ACTION_INSTALL = 0;
   */
  INSTALL = 0,

  /**
   * @generated from enum value: INTEGRATION_ACTION_VERIFY_INSTALL = 1;
   */
  VERIFY_INSTALL = 1,

  /**
   * @generated from enum value: INTEGRATION_ACTION_UNINSTALL = 2;
   */
  UNINSTALL = 2,
}

/**
 * Describes the enum local.IntegrationAction.
 */
export declare const IntegrationActionSchema: GenEnum<IntegrationAction>;

/**
 * @generated from enum local.UiElement
 */
export enum UiElement {
  /**
   * @generated from enum value: UI_ELEMENT_MENU_BAR = 0;
   */
  MENU_BAR = 0,

  /**
   * @generated from enum value: UI_ELEMENT_SETTINGS = 1;
   */
  SETTINGS = 1,

  /**
   * @generated from enum value: UI_ELEMENT_MISSION_CONTROL = 2;
   */
  MISSION_CONTROL = 2,

  /**
   * @generated from enum value: UI_ELEMENT_INPUT_METHOD_PROMPT = 3;
   */
  INPUT_METHOD_PROMPT = 3,
}

/**
 * Describes the enum local.UiElement.
 */
export declare const UiElementSchema: GenEnum<UiElement>;

/**
 * Note: enum values must be unique
 *
 * @generated from enum local.InputMethodAction
 */
export enum InputMethodAction {
  /**
   * @generated from enum value: INPUT_METHOD_ACTION_INSTALL = 0;
   */
  INSTALL = 0,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_UNINSTALL = 1;
   */
  UNINSTALL = 1,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_ENABLE = 2;
   */
  ENABLE = 2,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_DISABLE = 3;
   */
  DISABLE = 3,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_SELECT = 4;
   */
  SELECT = 4,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_DESELECT = 5;
   */
  DESELECT = 5,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_REGISTER = 6;
   */
  REGISTER = 6,

  /**
   * @generated from enum value: INPUT_METHOD_ACTION_STATUS_OF = 7;
   */
  STATUS_OF = 7,
}

/**
 * Describes the enum local.InputMethodAction.
 */
export declare const InputMethodActionSchema: GenEnum<InputMethodAction>;

