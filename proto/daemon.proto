syntax = "proto3";
package daemon;

// 
// Commands
//

// Message type used to send a command to daemon
message DaemonMessage {
    optional int64 id = 1;
	optional bool no_response = 2;
    oneof command {
        // A request to get diagnostic information from the daemon
        DiagnosticCommand diagnostic = 101;
    }
}

// Response message type used to send a response to a command
message DaemonResponse {
	optional int64 id = 1;
	oneof response {
        // A response to a diagnostic command
        DiagnosticResponse diagnostic = 101;
	}
}

// Command to get diagnostics
message DiagnosticCommand { }

// Response to DiagnosticCommand
message DiagnosticResponse {
    enum SettingsWatcherStatus {
        SETTINGS_WATCHER_OK = 0;
        SETTINGS_WATCHER_ERROR = 1;
    }
    
    enum WebsocketStatus {
        WEBSOCKET_OK = 0;
        WEBSOCKET_ERROR = 1;
    }    

    // The time that the settings debugwatcher was started in seconds since the epoch
    uint64 time_started_epoch = 1;
    // The status of the settings watcher
    SettingsWatcherStatus settings_watcher_status = 2;
    // The status of the websocket
    WebsocketStatus websocket_status = 3;
}

